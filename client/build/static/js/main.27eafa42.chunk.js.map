{"version":3,"sources":["images/facebook-profile-pic.jpg","actions/employeeAction.js","actions/projectAction.js","actions/ticketAction.js","actions/sessionAction.js","session/LoginForm.js","components/EmployeeTable2.js","components/Employee.js","components/AddProjectForm.js","components/ProjectTable.js","components/Project.js","components/EditTicketPopup.js","components/TicketTable.js","components/Ticket.js","components/LogoutButton.js","components/Navbar.js","pages/Dashboard.js","session/SignupForm.js","App.js","reducers/employeeReducer.js","reducers/sessionReducer.js","reducers/projectReducer.js","reducers/ticketReducer.js","store/configureStore.js","index.js","store/localStorage.js"],"names":["module","exports","loadEmployees","employees","type","removeOneEmployee","employeeId","getEmployees","dispatch","a","fetch","res","json","ok","console","log","loadProjects","projects","addProject","project","loadTickets","tickets","updateTicket","ticket","loadSession","user","token","login","email","password","body","method","headers","JSON","stringify","Cookies","get","employee","signup","name","LoginForm","useDispatch","useState","setEmail","setPassword","loginUser","e","preventDefault","className","to","onSubmit","id","label","onChange","target","value","required","variant","color","onClick","src","ProfilePic","alt","width","height","window","location","href","EmployeeTable2","employeesArray","deleteEmployee","confirm","parsedEmployeeId","parseInt","error","message","style","overflow","size","aria-label","map","key","roleId","mapRoleIdToName","Employee","selectedEmployeeId","setSelectedEmployeeId","roleToChange","setRoleToChange","useEffect","length","labelId","AddProjectForm","setName","description","setDescription","useSelector","state","Object","values","employeeIdArray","createProject","rowsMax","ProjectTable","projectsArray","disabled","Employees","comments","comment","split","text","Project","isHidden","setIsHidden","EditTicketPopup","hidePopup","ticketName","ticketDescr","ticketId","severityLevel","setSeverityLevel","status","setStatus","setType","editTicket","defaultValue","multiline","LabelId","TicketTable","ticketsArray","dataset","descr","data-name","data-descr","Ticket","setTicketName","setTicketDescr","setTicketId","ticketNamePopup","ticketDescrPopup","LogoutButton","logoutUser","remove","Navbar","activeSidebar","setActiveSidebar","toggleSidebar","Dashboard","currentEmployeeRole","session","role","setDisabled","marginTop","textAlign","SignupForm","signupUser","ProtectedRoute","Component","component","rest","render","props","AuthRoute","App","exact","path","AppContainer","authToken","employeeReducer","nextState","action","assign","sessionReducer","currentUserId","projectReducer","ticketReducer","ticketToUpdate","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","storeEnhancer","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","stateJSON","localStorage","getItem","parse","warn","loadState","subscribe","setItem","saveState","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27eafa42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook-profile-pic.98839d7d.jpg\";","export const LOAD_EMPLOYEES = 'LOAD_EMPLOYEES'\nexport const REMOVE_EMPLOYEES = 'REMOVE_EMPLOYEES'\nexport const REMOVE_ONE_EMPLOYEE = 'REMOVE_ONE_EMPLOYEE'\n\n\n//actions\nexport const loadEmployees = (employees) => ({\n    type: LOAD_EMPLOYEES,\n    employees\n\n})\n\nexport const removeEmployees = () => ({\n    type: REMOVE_EMPLOYEES\n})\n\nexport const removeOneEmployee = (employeeId) => ({\n    type: REMOVE_ONE_EMPLOYEE,\n    employeeId\n})\n\n//thunk\nexport const getEmployees = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/users')\n\n        //logged in user\n        const { employees } = await res.json()\n        if(!res.ok){    \n            throw res\n        }\n        if(employees){\n            dispatch(loadEmployees(employees))\n        }\n        return\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\n//thunk\nexport const updateEmployeeRole = (employeeId, roleId) => async (dispatch) => {\n    const parsedEmployeeId = parseInt(employeeId, 10)\n    try {\n        const body = { roleId }\n        const res = await fetch(`/api/users/${parsedEmployeeId}`, {\n            method: 'PUT',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        dispatch(getEmployees())\n    } catch (err) {\n        console.error(err.message)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const deleteEmployee = (employeeId) => async (dispatch) => {\n    const parsedEmployeeId = parseInt(employeeId, 10)\n    try {\n        const res = await fetch(`/api/users/${parsedEmployeeId}`, {\n            method: 'DELETE'\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        dispatch(removeOneEmployee(parsedEmployeeId))\n    } catch (err) {\n        console.error(err.message)\n        //enventually will push into errors array in store\n    }\n}","export const LOAD_PROJECTS = 'LOAD_PROJECTS'\nexport const ADD_PROJECT = 'ADD_PROJECT'\nexport const REMOVE_PROJECTS = 'REMOVE_PROJECTS'\n\n\n//actions\nconst loadProjects = (projects) => ({\n    type: LOAD_PROJECTS,\n    projects\n})\n\nconst addProject = (project) => ({\n    type: ADD_PROJECT,\n    project\n})\n\nexport const removeProjects = () => ({\n    type: REMOVE_PROJECTS\n})\n\n\n\n//thunks\n\nexport const getProjects = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/projects')\n\n        \n        const { projects } = await res.json()\n        if(projects){\n            dispatch(loadProjects(projects))\n        }\n        return \n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const createProject = (name, description, employeeId) => async (dispatch) => {\n    //manually making array. git rid of this when multi select created for form\n    const employeeIdArray = [employeeId]\n\n    const body = {\n        name,\n        description,\n        employeeIdArray\n    }\n\n    try {\n        const res = await fetch('/api/projects', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if(!res.ok){\n            throw res\n        }\n\n        const { project } = await res.json()\n        console.log('inside getprojects thunks', project)\n        dispatch(addProject(project))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n\n}\n","export const LOAD_TICKETS = 'LOAD_TICKETS'\nexport const REMOVE_TICKETS = 'REMOVE_TICKETS'\nexport const UPDATE_TICKET = 'UPDATE_TICKET'\n\n\n//actions\nconst loadTickets = (tickets) => ({\n    type: LOAD_TICKETS,\n    tickets\n})\n\nconst updateTicket = (ticket) => ({\n    type: UPDATE_TICKET,\n    ticket\n})\n\n\nexport const removeTickets = () => ({\n    type: REMOVE_TICKETS\n})\n\nexport const getTickets = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/tickets')\n\n        if(!res.ok){    \n            throw res\n        }\n        const { tickets } = await res.json()\n        console.log('all tickets', tickets)\n        dispatch(loadTickets(tickets))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n} \n\nexport const editTicket = (name, description, severityLevel, status, type, employeeId, ticketId) => async (dispatch) => {\n    //manually making array. git rid of this when multi select created for form\n\n    const body = {\n        name,\n        description,\n        severityLevel,\n        type,\n        status, \n        employeeId\n    }\n\n    try {\n        const res = await fetch(`/api/tickets/${ticketId}`, {\n            method: 'PUT', \n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if(!res.ok){    \n            throw res\n        }\n        const { ticket } = await res.json()\n        dispatch(updateTicket(ticket))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}","import Cookies from 'js-cookie'\nimport { removeEmployees } from './employeeAction'\nimport { removeProjects } from './projectAction'\nimport { removeTickets } from './ticketAction'\nexport const LOAD_SESSION = 'LOAD_SESSION'   \nexport const REMOVE_SESSION = 'REMOVE_SESSION' \n\n\n\n//actions\nexport const loadSession = (user, token) => ({\n    type: LOAD_SESSION,\n    user, \n    token\n\n})\n\nexport const removeSession = () => ({\n    type: REMOVE_SESSION\n})\n\n\n//thunks\n//getState is also a param after dispatch -- check docs for more info\nexport const login = ( email, password ) => async (dispatch) => {    \n    //build a body for req\n    const body = {\n        email, \n        password\n    }\n\n    \n    //make a fetch call to db to login user\n    try{\n        const res = await fetch('/api/session', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        \n        //grab current token\n        const token = Cookies.get('token')\n\n        //logged in user\n        const { employee } = await res.json()\n\n        dispatch(loadSession(employee, token))\n    } catch (err){\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n    \n}\n\nexport const logout = () => (dispatch) => {\n    Cookies.remove('token')\n    dispatch(removeSession())\n    dispatch(removeEmployees())\n    dispatch(removeProjects())\n    dispatch(removeTickets())\n} \n\nexport const signup = ( name, email, password ) => async (dispatch) => {\n    //post req to /users\n    //dispatch load session \n\n    //build a body for req\n    const body = {\n        name,\n        email, \n        password\n    }\n\n    \n    //make a fetch call to db to login user\n    try{\n        const res = await fetch('/api/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        if(!res.ok){\n            throw res\n        }\n        \n        //grab current token\n        const token = Cookies.get('token')\n\n        //logged in user\n        const { employee } = await res.json()\n\n        dispatch(loadSession(employee, token))\n    } catch (err){\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n\n}\n\n","import React, { useState } from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { login } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\nimport { Link, NavLink } from 'react-router-dom'\n// import * as FaIcons from 'react-icons/fa'\nimport * as CgIcons from 'react-icons/cg'\nimport * as FaIcons from 'react-icons/fa'\nimport * as mui from '@material-ui/core';\nimport ProfilePic from '../images/facebook-profile-pic.jpg'\n\n\n\nconst LoginForm = () => {\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const updateEmail = (e) => setEmail(e.target.value)\n    const updatePassword = (e) => setPassword(e.target.value)\n\n    //handle submit\n    const loginUser = async (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <>\n            <div className='navbar login-navbar'>\n                <div className='login-navbar__logo'>\n                    <NavLink to='#' className='menu-bars'>\n                        <CgIcons.CgTrack />\n                    </NavLink>\n                    <h1 className='navbar__header login-navbar__header'>Trackerfy</h1>\n                </div>\n                <div className='login-navbar__button'>\n                    <div>\n                        <NavLink className='login-navbar__text' to='/login' >Login</NavLink>\n                    </div>\n                    <div>\n                        <NavLink className='login-navbar__text' to='/signup' >Sign Up</NavLink>\n                    </div>\n                </div>\n            </div>\n            <div className='dashboard-grid__component-login login'>\n                <div className='component__topbar'>Login Here</div>\n                <form className='login-form' onSubmit={loginUser}>\n                    <mui.TextField id=\"standard-basic\" label=\"Email\" onChange={updateEmail} name='email' type='email' value={email} required />\n                    <mui.TextField id=\"standard-basic\" label=\"Password\" onChange={updatePassword} name='password' type='password' value={password} required />\n                    <mui.Button variant='contained' color='primary' type='submit'>Submit</mui.Button>\n                </form>\n                <div><Link onClick={() => {\n                    setEmail('demo1@example.com')\n                    setPassword('password1')\n                }\n                } to='#'>demo_user_admin</Link></div>\n                <div><Link onClick={(e) => {\n                    setEmail('demo2@example.com')\n                    setPassword('password2')\n                }\n                } to='#'>demo_user_projectManager</Link></div>\n                <div><Link onClick={(e) => {\n                    setEmail('demo3@example.com')\n                    setPassword('password3')\n                }\n                } to='#'>demo_user_dev</Link></div>\n                <div><Link onClick={(e) => {\n                    setEmail('demo4@example.com')\n                    setPassword('password4')\n                }\n                } to='#'>demo_user_submitter</Link></div>\n            </div>\n            <div className='trackerfy-info'>\n                <p >Preface:</p>\n                <p >This site's main purpose is to 'track' bugs/errors and tasks to be delegated to the \n                    appropriate employee in product/app development. There are four main roles: admin, project managers, developers(devs), and sumitters.\n                    admin has all access permissions (including assigning roles to new employees), project managers assign tickets, submitters create tickets, and devs manage ticket status.  </p>\n            </div>\n            <div className='footer'>\n                <div>\n                    <h4>frameworks</h4>\n                    <ul>\n                        <li>react</li>\n                        <li>express</li>\n                    </ul>\n                </div>\n                <div>\n                    <h4>libraries</h4>\n                    <ul>\n                        <li>redux</li>\n                        <li>role based action control (rbac)</li>\n                        <li>sequelize</li>\n                        <li>material ui</li>\n                        <li>react icons</li>\n                        <li>JSON web token</li>\n                        <li>bcrypt</li>\n                    </ul>\n                </div>\n                <div>\n                    <h4>languages</h4>\n                    <ul>\n                        <li>javaScript</li>\n                        <li>JSX</li>\n                        <li>sql</li>\n                    </ul>\n                </div>\n                <div>\n                    <h2>Creator</h2>\n                    <div className='img-card'>\n                        <div className='cropped'>\n                            <img className='cropped__img' src={ProfilePic} alt='profile' width='200px' height='300px' />\n                        </div>\n                        <p>Quynn Smith</p>\n                        <div >\n                            <FaIcons.FaGithub className='github-link' onClick={()=>window.location.href='https://github.com/qsmity'}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n\n\nexport default LoginForm","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport * as employeeAction from '../actions/employeeAction'\nimport * as mui from '@material-ui/core';\n\n\n\nconst EmployeeTable2 = ({ employeesArray }) => {\n    const dispatch = useDispatch()\n    const mapRoleIdToName = (roleId) => {\n        switch (roleId) {\n            case 1:\n                return 'admin'\n            case 2:\n                return 'project manager'\n            case 3:\n                return 'dev'\n            case 4:\n                return 'submitter'\n            default:\n                return null\n\n        }\n    }\n\n    const deleteEmployee = (e) => {\n        if (window.confirm('Are you sure you wish to delete this item?')) {\n            dispatch(employeeAction.deleteEmployee(e.target.id))\n        }\n        return\n    }\n\n    return (\n        <>\n            <mui.TableContainer >\n                <mui.Table>\n                <mui.TableHead>\n                            <mui.TableRow>\n                                <mui.TableCell>Employee</mui.TableCell>\n                                <mui.TableCell>Role</mui.TableCell>\n                                <mui.TableCell></mui.TableCell>\n                            </mui.TableRow>\n                        </mui.TableHead>\n                </mui.Table>\n                <div style={{ overflow: 'auto', height: '300px'}}>\n                    <mui.Table size=\"small\" aria-label=\"a dense table\">\n                        <mui.TableBody>\n                            {employeesArray.map(employee => {\n                                return (\n                                        <mui.TableRow key={employee.id}>\n                                            <mui.TableCell>{employee.name}</mui.TableCell>\n                                            <mui.TableCell>{mapRoleIdToName(employee.roleId)}</mui.TableCell>\n                                            <mui.TableCell><mui.Button id={employee.id} onClick={deleteEmployee}>Delete</mui.Button></mui.TableCell>\n                                        </mui.TableRow>\n                                )\n                            })}\n\n                        </mui.TableBody>\n                    </mui.Table>\n                </div>\n            </mui.TableContainer>\n        </>\n    )\n\n}\n\nexport default EmployeeTable2; ","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getEmployees } from '../actions/employeeAction'\nimport { updateEmployeeRole } from '../actions/employeeAction'\nimport EmployeeTable2 from './EmployeeTable2'\nimport * as mui from '@material-ui/core';\n\n\nconst Employee = ({employeesArray}) => {\n    const dispatch = useDispatch()\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState('')\n    const [roleToChange, setRoleToChange] = useState('')\n\n    useEffect(() => {\n        dispatch(getEmployees())\n    }, [dispatch])\n\n    //hanldle selected employee\n    const selectedEmployee = (e) => {\n        setSelectedEmployeeId(e.target.value)\n    }\n\n    //handle role change \n    const roleChange = (e) => {\n        setRoleToChange(e.target.value)\n    }\n    // console.log('selectedEmployeeId', selectedEmployeeId)\n    // console.log('roleToChange', roleToChange)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(updateEmployeeRole(selectedEmployeeId, roleToChange))\n    }\n\n    // console.log(Object.values(employees))\n    if (employeesArray.length > 0) {\n        return (\n            <div>\n                <EmployeeTable2  employeesArray={employeesArray}/>\n            <form className='employee-form' onSubmit={handleSubmit}>\n                <div className='employee-form__title'>Edit Employee Roles</div>\n                <mui.InputLabel id=\"demo-simple-select-label\">Employee</mui.InputLabel>\n                <mui.Select labelId='demo-simple-select-label' onChange={selectedEmployee} id='employee' value={selectedEmployeeId} required>\n                    <mui.MenuItem value='' key={-1}>Select Employee</mui.MenuItem>\n                    {employeesArray.map(employee => (\n                        <mui.MenuItem key={employee.id} value={employee.id}>{employee.name}</mui.MenuItem>\n                        \n                    ))\n                    }\n                </mui.Select>\n                <mui.InputLabel id=\"demo-simple-select-label\">Role</mui.InputLabel>\n                <mui.Select labelId=\"demo-simple-select-label\" onChange={roleChange} id='roles' name='roles' value={roleToChange} required>\n                    <mui.MenuItem value='' key={-1}>Select Role</mui.MenuItem>\n                    <mui.MenuItem value={0} key={0}>no role</mui.MenuItem>\n                    <mui.MenuItem value={1} key={1}>admin</mui.MenuItem>\n                    <mui.MenuItem value={2} key={2}>project manager</mui.MenuItem>\n                    <mui.MenuItem value={3} key={3}>dev</mui.MenuItem>\n                    <mui.MenuItem value={4} key={4}>submitter</mui.MenuItem>\n                    \n                    \n                </mui.Select>\n                <mui.Button variant='contained' type='submit'>Submit</mui.Button>\n            </form>\n                \n            </div>\n        )\n    } else {\n        return <h1>N/A</h1>\n    }\n\n\n\n}\n\nexport default Employee;","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createProject } from '../actions/projectAction'\nimport * as mui from '@material-ui/core';\n\n\n\n\nconst AddProjectForm = () => {\n\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const updateName = (e) => setName(e.target.value)\n    const updateDescription = (e) => setDescription(e.target.value)\n    //subscribe to the employee slice of state for the drop down\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState('')\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees)\n\n    //handle selectedEmployee change\n    const selectedEmployee = (e) => {\n        setSelectedEmployeeId(e.target.value)\n    }\n\n\n    //handle submit add project\n    const addProject = (e) => {\n        e.preventDefault()\n        dispatch(createProject(name, description, selectedEmployeeId))\n        setName('')\n        setDescription('')\n\n    }\n    return (\n        <div>\n            <form className='add-proj-form' onSubmit={addProject}>\n                <mui.TextField onChange={updateName} label='Name' id=\"standard-required\" value={name} />\n                <mui.TextField onChange={updateDescription} rowsMax={4} label='Description' id='standard-multiline-flexible' value={description} />\n                <div className='add-proj-form__add-employee-dropdown'>\n                    <mui.InputLabel id=\"demo-simple-select-label\">Add Employee</mui.InputLabel>\n                    <mui.Select labelId='id=\"demo-simple-select-label\"' onChange={selectedEmployee} id='employee' value={selectedEmployeeId}>\n                        <mui.MenuItem value='' key={-1}>Select Employee</mui.MenuItem>\n                        {employeesArray.map(employee => (\n                            <mui.MenuItem key={employee.id} value={employee.id}>{employee.name}</mui.MenuItem>\n\n                        ))\n                        }\n                    </mui.Select>\n                </div>\n                <div>\n                    <mui.Button variant='contained' type='submit'>Add</mui.Button>\n\n                </div>\n            </form>\n        </div>\n\n    )\n}\n\nexport default AddProjectForm; ","import React from 'react'\nimport * as mui from '@material-ui/core';\nimport * as FiIcons from 'react-icons/fi'\n\n\nconst ProjectTable = ({ projectsArray, disabled }) => {\n    return (\n        <>\n            <mui.TableContainer>\n                <mui.Table>\n                    <mui.TableHead>\n                        <mui.TableRow>\n                            <mui.TableCell>Project</mui.TableCell>\n                            <mui.TableCell>Description</mui.TableCell>\n                            <mui.TableCell>Assigned Employees</mui.TableCell>\n                            <mui.TableCell>Comments</mui.TableCell>\n                            <mui.TableCell></mui.TableCell>\n                        </mui.TableRow>\n                    </mui.TableHead>\n                </mui.Table>\n                <div style={{ overflow: 'auto', height: '400px' }}>\n                    <mui.Table size=\"small\" aria-label=\"a dense table\">\n                        <mui.TableBody>\n                            {projectsArray.map(project => {\n                                return (\n                                        <mui.TableRow key={project.id}>\n                                            <mui.TableCell>{project.name}</mui.TableCell>\n                                            <mui.TableCell>{project.description}</mui.TableCell>\n                                            <mui.TableCell>\n                                                <ul>\n                                                    {project.Employees ? project.Employees.map(employee => {\n                                                        return <li key={employee.id}>\n                                                            {employee.name}\n                                                        </li>\n                                                    }\n                                                    ) : ''\n                                                    }\n\n                                                </ul>\n                                            </mui.TableCell>\n                                            <mui.TableCell>\n                                                <ul>\n                                                    {project.comments ?\n                                                        project.comments.map(comment => {\n                                                            const [employeeId, text] = comment.split('__')\n                                                            const parsedEmployeeId = parseInt(employeeId, 10)\n                                                            return <li key={parsedEmployeeId}>{text}</li>\n                                                        })\n                                                        : 'no comments'\n                                                    }\n\n                                                </ul>\n                                            </mui.TableCell>\n                                            <mui.TableCell><FiIcons.FiEdit2 className='edit-icon' disabled={disabled} onClick={(e) => console.log('hello')} />\n                                            </mui.TableCell>\n                                            <mui.TableCell><mui.Button id={project.id} disabled={disabled}>Delete</mui.Button></mui.TableCell>\n                                        </mui.TableRow>                                )\n                            })}\n\n                        </mui.TableBody>\n                    </mui.Table>\n                </div>\n            </mui.TableContainer>\n        </>\n    )\n}\n\nexport default ProjectTable; ","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProjects } from '../actions/projectAction'\nimport AddProjectForm from './AddProjectForm'\nimport ProjectTable from './ProjectTable'\nimport * as mui from '@material-ui/core';\n\n\n\nconst Project = ({disabled}) => {\n    const dispatch = useDispatch()\n    const projects = useSelector(state => state.projects)\n    const projectsArray = Object.values(projects)\n    const [isHidden, setIsHidden] = useState(true)\n\n\n    useEffect(() => {\n        dispatch(getProjects())\n    }, [dispatch])\n\n    //handle on click create projecdt\n    const addProject = (e) => {\n        setIsHidden(!isHidden)\n    }\n\n    // console.log(Object.values(employees))\n    if (projectsArray.length > 0) {\n        return (\n            <div >\n                <mui.Button  variant='contained' disabled={disabled} onClick={addProject}>add project</mui.Button>\n                <div className={isHidden ? 'hidden' : ''}>\n                    <AddProjectForm />\n                </div>\n                <ProjectTable disabled={disabled} projectsArray={projectsArray} />\n            </div>\n        )\n    } else {\n        return <h2>no projects found</h2>\n    }\n}\n\nexport default Project; ","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editTicket } from '../actions/ticketAction'\nimport * as mui from '@material-ui/core';\n\nconst EditTicketPopup = ({ hidePopup, ticketName, ticketDescr, ticketId }) => {\n    const dispatch = useDispatch()\n    // console.log('inside popup', ticketName, ticketDescr);\n    const [name, setName] = useState(ticketName)\n    // const updateName = (e) => setName(e.target.value)\n    const [description, setDescription] = useState(ticketDescr)\n    const updateDescription = (e) => setDescription(e.target.value)\n    const [severityLevel, setSeverityLevel] = useState('low')\n    const updateSeverityLevel = (e) => setSeverityLevel(e.target.value)\n    const [status, setStatus] = useState('work in progress')\n    const updateStatus = (e) => setStatus(e.target.value)\n    const [type, setType] = useState('bug/error')\n    const updateType = (e) => setType(e.target.value)\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState('')\n    const selectedEmployee = (e) => setSelectedEmployeeId(e.target.value)\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees)\n\n    //handle submit \n    const addTicket = (e) => {\n        e.preventDefault()\n        dispatch(editTicket(name, description, severityLevel, status, type, selectedEmployeeId, ticketId))\n        console.log('in popup', name, description, severityLevel, status, type, ticketId, selectedEmployeeId)\n        setName('')\n        setDescription('')\n        hidePopup()\n    }\n\n    //handle close click\n    const close = (e) => {\n        hidePopup()\n    }\n\n    return (\n        <div className=\"edit-overlay\">\n            <div className='popup'>\n                <div className='component__topbar component__topbar--blue'> Edit Ticket </div>\n                <form onSubmit={addTicket} className='popup__form'>\n                    <mui.Button variant='contained' onClick={close} className='close'>exit</mui.Button>\n                    <mui.TextField disabled id=\"standard-required\" label='Name' defaultValue={ticketName} />\n                    <mui.TextField onChange={updateDescription} rowsMax={4} label='description' id='standard-multiline-flexible' value={description} multiline />\n                    <mui.InputLabel id=\"demo-simple-select-label\">Severity Level</mui.InputLabel>\n                    <mui.Select labelId=\"demo-simple-select-label\" id='severityLevel' onChange={updateSeverityLevel} value={severityLevel}>\n                        <mui.MenuItem value='low'>Low</mui.MenuItem>\n                        <mui.MenuItem value='medium'>Medium</mui.MenuItem>\n                        <mui.MenuItem value='high'>High</mui.MenuItem>\n                    </mui.Select >\n                    <mui.InputLabel id=\"demo-simple-select-label\">Status</mui.InputLabel>\n                    <mui.Select labelId=\"demo-simple-select-label\" id='status' onChange={updateStatus} value={status}>\n                        <mui.MenuItem value='work in progress'>Work In Progress</mui.MenuItem>\n                        <mui.MenuItem value='completed'>Completed</mui.MenuItem>\n                    </mui.Select>\n                    <mui.InputLabel id=\"demo-simple-select-label\">Type</mui.InputLabel>\n                    <mui.Select LabelId='demo-simple-select-label' id='type' onChange={updateType} value={type}>\n                        <mui.MenuItem value='bug/error'>Bug/Error</mui.MenuItem>\n                        <mui.MenuItem value='task'>Task</mui.MenuItem>\n                    </mui.Select>\n                    <mui.InputLabel id=\"demo-simple-select-label\">Add Employee</mui.InputLabel>\n                    <mui.Select LabelId='demo-simple-select-label' onChange={selectedEmployee} id='employee' value={selectedEmployeeId}>\n                        <mui.MenuItem value='' key={-1}>Select Employee</mui.MenuItem>\n                        {employeesArray.map(employee => (\n                            <mui.MenuItem key={employee.id} value={employee.id}>{employee.name}</mui.MenuItem>\n\n                        ))\n                        }\n                    </mui.Select>\n                    <mui.Button variant='contained' type='submit'>Add</mui.Button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditTicketPopup","import React from 'react'\nimport * as mui from '@material-ui/core';\n\n\n\nconst TicketTable = ({ ticketsArray, disabled, hidePopup }) => {\n    console.log('ticketsArray inside ticket table', ticketsArray)\n    //handle edit click\n    const editTicket = (e) => {\n        console.log(e.target.dataset.name)\n        console.log(e.target.dataset.descr)\n        console.log(e.target.id)\n        hidePopup(e.target.dataset.name, e.target.dataset.descr, e.target.id)\n    }\n\n    return (\n    <>\n            <mui.TableContainer>\n                <mui.Table>\n                    <mui.TableHead>\n                        <mui.TableRow>\n                            <mui.TableCell>Name</mui.TableCell>\n                            <mui.TableCell>Description</mui.TableCell>\n                            <mui.TableCell>Severity Level</mui.TableCell>\n                            <mui.TableCell>Status</mui.TableCell>\n                            <mui.TableCell>Assigned Empoyee</mui.TableCell>\n                            <mui.TableCell></mui.TableCell>\n                            <mui.TableCell></mui.TableCell>\n                        </mui.TableRow>\n                    </mui.TableHead>\n                </mui.Table>\n                <div style={{ overflow: 'auto', height: '300px'}}>\n                    <mui.Table size=\"small\" aria-label=\"a dense table\">\n                        <mui.TableBody>\n                            {ticketsArray.map(ticket => {\n                                return (\n                                        <mui.TableRow key={ticket.id}>\n                                            <mui.TableCell>{ticket.name}</mui.TableCell>\n                                            <mui.TableCell>{ticket.description}</mui.TableCell>\n                                            <mui.TableCell>{ticket.severityLevel}</mui.TableCell>\n                                            <mui.TableCell>{ticket.status}</mui.TableCell>\n                                            <mui.TableCell>{ticket.Employee}</mui.TableCell>\n                                            <mui.TableCell><mui.Button id={ticket.id} disabled={disabled}>Delete</mui.Button></mui.TableCell>\n                                            <mui.TableCell><mui.Button onClick={editTicket} disabled={disabled}><div id={ticket.id} data-name={ticket.name} data-descr={ticket.description}>Edit</div></mui.Button></mui.TableCell>\n                                        </mui.TableRow>\n                                                                        )\n                            })}\n\n                        </mui.TableBody>\n                    </mui.Table>\n                </div>\n            </mui.TableContainer>\n        </>\n    )\n}\n\nexport default TicketTable; ","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getTickets } from '../actions/ticketAction'\nimport EditTicketPopup from './EditTicketPopup'\nimport TicketTable from './TicketTable'\n\n\nconst Ticket = ({ disabled }) => {\n    const dispatch = useDispatch()\n    const tickets = useSelector(state => state.tickets)\n    const ticketsArray = Object.values(tickets)\n\n    //grab ticket name and description for edit button popup\n    const [ticketName, setTicketName] = useState('hello')\n    const [ticketDescr, setTicketDescr] = useState('goodbye')\n    const [ticketId, setTicketId] = useState('')\n\n    //hidden state for edit ticket popup\n    const [isHidden, setIsHidden] = useState(true)\n    \n    //edit button will pass  necessary ticket info nested in the edit button dataset attribute, onclick\n    const hidePopup = (ticketNamePopup, ticketDescrPopup, ticketId) => {\n        \n        if(isHidden === true){\n            setIsHidden(false)\n            setTicketName(ticketNamePopup)\n            setTicketDescr(ticketDescrPopup)\n            setTicketId(ticketId)\n        } else {\n            setIsHidden(true)\n        }\n        \n    }\n\n    useEffect(() => {\n        dispatch(getTickets())\n    }, [dispatch])\n\n    if (ticketsArray.length > 0) {\n        return (\n            <div className='ticket'>\n                <div>\n                    <TicketTable hidePopup={hidePopup} disabled={disabled} ticketsArray={ticketsArray} />\n                </div>\n                { !isHidden ? <EditTicketPopup ticketId={ticketId} ticketName={ticketName} ticketDescr={ticketDescr} hidePopup={hidePopup} /> : null}\n            </div>\n        )\n    } else {\n        return <h1>No Tickets available</h1>\n    }\n\n}\n\nexport default Ticket; ","import React from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { logout } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\nimport * as mui from '@material-ui/core';\n\n\nconst LogoutButton = () => {\n    const dispatch = useDispatch()\n\n    //handle click\n    const logoutUser = async (e) => {\n        dispatch(logout())\n    }\n\n    return (\n        <div>\n            <mui.Button variant='contained' color='primary' onClick={logoutUser} type='submit'>Logout</mui.Button>\n        </div>\n    )\n}\n\nexport default LogoutButton; ","import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport LogoutButton from '../components/LogoutButton'\nimport * as FaIcons from 'react-icons/fa'\nimport * as CgIcons from 'react-icons/cg'\n\n\n\nfunction Navbar() {\n    const [activeSidebar, setActiveSidebar] = useState(false)\n    const toggleSidebar = (e) => setActiveSidebar(!activeSidebar)\n    return (\n        <>\n            <div className='navbar'>\n                <NavLink to='#' className='menu-bars'>\n                    <FaIcons.FaBars onClick={toggleSidebar} />\n                </NavLink>\n                <div className='navbar__logo'>\n                    <CgIcons.CgTrack className='menu-bars menu-bars--purple' />\n                    <h1>Trackerfy</h1>\n                </div>\n                <div className='navbar__logout'>\n                    <LogoutButton />\n                </div>\n            </div>\n            <nav className={activeSidebar ? 'nav-menu nav-menu--active' : 'nav-menu'}>\n                <ul className='nav-menu__items' onClick={toggleSidebar}>\n                    <li className='nav-menu__toggle'>\n                        <NavLink to='#' className='nav-menu__close'>\n                            <FaIcons.FaWindowClose onClick={toggleSidebar} />\n                        </NavLink>\n                    </li>\n                    <li className='nav-menu__item'>\n                        <NavLink className='nav-menu__link' to='#' >Profile</NavLink>\n                    </li>\n                    <li className='nav-menu__item'>\n                        <NavLink className='nav-menu__link' to='/admin/dashboard' >Dashboard</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </>\n    )\n}\n\nexport default Navbar\n","import React, {useState, useEffect} from 'react'\nimport Employee from '../components/Employee'\nimport Project from '../components/Project'\nimport Ticket from '../components/Ticket'\nimport { useSelector } from 'react-redux'\nimport Navbar from '../components/Navbar'\n\n\nconst Dashboard = () => {\n    const currentEmployeeRole = useSelector(state => state.session.role)\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees)\n\n\n\n    const [disabled, setDisabled] = useState(false)\n\n    //checks user role. if not admin disabled will be true\n    //this allows to disabled all delete buttons for non admin roles\n    useEffect(()=> {\n        if(currentEmployeeRole !== 1){\n            setDisabled(true)\n        } else {\n            setDisabled(false)\n        }\n    }, [currentEmployeeRole])\n\n    return (\n        <>\n        <nav>\n          <Navbar/>\n        </nav>\n        <div>\n            {!currentEmployeeRole? <h2 style={{ marginTop: '10%', textAlign: 'center'}}>Wait To Be Assigned Role</h2> : null}\n        </div>\n        <div className='dashboard-grid'>\n            <div className={employeesArray.length <= 0 ? 'dashboard-grid__component-employee dashboard-grid__component--hidden' : 'dashboard-grid__component-employee'}>\n                <div className='component__topbar'><h2>Employees</h2></div>\n                <Employee employeesArray={employeesArray} disabled={disabled}/>\n            </div>\n            <div className='dashboard-grid__component-project'>\n                <div className='component__topbar'><h2>Projects</h2></div>\n                <Project disabled={disabled}/>\n            </div>\n            <div className='dashboard-grid__component-ticket'>\n                <div className='component__topbar'><h2>Tickets</h2></div>\n                <Ticket disabled={disabled}/>\n            </div>\n        </div>\n    </>\n    )\n}\n\nexport default Dashboard; ","import React, { useState } from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { signup } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\nimport * as mui from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport * as CgIcons from 'react-icons/cg'\n\n\n\n\nconst SignupForm = () => {\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const updateName = (e) => setName(e.target.value)\n    const updateEmail = (e) => setEmail(e.target.value)\n    const updatePassword = (e) => setPassword(e.target.value)\n\n    //handle submit\n    const signupUser = async (e) => {\n        e.preventDefault()\n        dispatch(signup(name, email, password))\n    }\n\n    return (\n        <>\n            <div className='navbar login-navbar'>\n                <div className='login-navbar__logo'>\n                    <NavLink to='#' className='menu-bars'>\n                        <CgIcons.CgTrack />\n                    </NavLink>\n                    <h1 className='navbar__header login-navbar__header'>Trackerfy</h1>\n                </div>\n                <div className='login-navbar__button'>\n                    <div>\n                        <NavLink className='login-navbar__text' to='/login' >Login</NavLink>\n                    </div>\n                    <div>\n                        <NavLink className='login-navbar__text' to='/signup' >Sign Up</NavLink>\n                    </div>\n                </div>\n            </div>\n            <div className='dashboard-grid__component-login login'>\n                <div className='component__topbar'>Sign Up here</div>\n                <form className='login-form' onSubmit={signupUser}>\n                    <mui.TextField id=\"standard-basic\" label=\"Name\" onChange={updateName} name='name' type='name' value={name} required />\n                    <mui.TextField id=\"standard-basic\" label=\"Email\" onChange={updateEmail} name='email' type='email' value={email} required />\n                    <mui.TextField id=\"standard-basic\" label=\"Password\" onChange={updatePassword} name='password' type='password' value={password} required />\n                    <mui.Button variant='contained' color='primary' type='submit'>Sign Up</mui.Button>\n                </form>\n            </div>\n        </>\n    )\n}\n\n\n\nexport default SignupForm; ","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport LoginForm from './session/LoginForm'\nimport Dashboard from './pages/Dashboard'\nimport { useSelector } from 'react-redux';\nimport SignupForm from './session/SignupForm';\n\n//rest encapsulates path and exact being passed down\n//redirect user if not logged in\nconst ProtectedRoute = ({ component: Component, token, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={ (props) => token ? <Component {...props} /> : <Redirect to='/login'/> }\n    />\n  )\n}\n//if user is logged in, redirect user back to dashboard\nconst AuthRoute = ({ component: Component, token, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={ (props) => token ? <Redirect to='/admin/dashboard'/> : <Component {...props} /> }\n    />\n  )\n}\n\nfunction App({token}) {\n  return (\n    <>\n    <BrowserRouter>\n        <Switch>\n          <ProtectedRoute token={token} exact path='/admin/dashboard' component={Dashboard} />\n          <AuthRoute exact token={token} path='/login' component={LoginForm} />\n          <AuthRoute token={token} path='/signup' component={SignupForm}/>\n          <AuthRoute token={token} path='/' component={LoginForm}/>\n        </Switch>\n    </BrowserRouter>\n    </>\n  );\n}\n\nconst AppContainer = () => {\n  const token = useSelector( state => state.session.authToken )\n  return <App token={token}/>\n  \n}\n\nexport default AppContainer;\n","import {\nLOAD_EMPLOYEES, \nREMOVE_EMPLOYEES,\nREMOVE_ONE_EMPLOYEE\n} from '../actions/employeeAction'\n\n\n//reducer\nconst employeeReducer = (state = {}, action) => {\n    let nextState;\n    switch(action.type){\n        case LOAD_EMPLOYEES: \n            nextState = {}\n            action.employees.map( employee => {\n               return nextState[employee.id] = employee\n            })\n            return nextState\n        case REMOVE_EMPLOYEES: \n            return {}\n        case REMOVE_ONE_EMPLOYEE: \n            nextState = Object.assign({}, {...state})\n            delete nextState[action.employeeId]\n            return nextState\n        default: \n            return state\n    }\n}\n\nexport default employeeReducer\n\n","import {\n    LOAD_SESSION, \n    REMOVE_SESSION\n    } from '../actions/sessionAction'\n    \n    \n    //reducer\n    const sessionReducer = (state = {}, action) => {\n        switch(action.type){\n            case LOAD_SESSION: \n                return Object.assign({}, { currentUserId: action.user.id, role: action.user.roleId, authToken: action.token })\n            case REMOVE_SESSION: \n                return {}\n            default: \n                return state\n        }\n    }\n    \n    export default sessionReducer","import {\n    ADD_PROJECT,\n    LOAD_PROJECTS,\n    REMOVE_PROJECTS,\n\n} from '../actions/projectAction'\n\n\n//reducer\nconst projectReducer = (state = {}, action) => {\n    let nextState;\n    switch (action.type) {\n        case LOAD_PROJECTS:\n            nextState = {}\n            action.projects.map(project => {\n                return nextState[project.id] = project\n            })\n            return nextState\n        case ADD_PROJECT: \n            nextState = {\n                ...state,\n                [action.project.id]: action.project\n            }\n            return nextState\n        case REMOVE_PROJECTS: \n            return {}\n        default:\n            return state\n    }\n}\n\nexport default projectReducer\n\n","import {\n    LOAD_TICKETS,\n    REMOVE_TICKETS,\n    UPDATE_TICKET\n} from '../actions/ticketAction'\n\nconst ticketReducer = (state = {}, action) => {\n    let nextState = Object.assign({}, state)\n    switch (action.type) {\n        case LOAD_TICKETS:\n            action.tickets.map(ticket => {\n                //convert employee object to just the name to make state shape easier to update\n                ticket.Employee = ticket.Employee.name\n                return nextState[ticket.id] = ticket\n            })\n            return nextState\n        case REMOVE_TICKETS:\n            return {}\n        case UPDATE_TICKET:\n            const ticketId = action.ticket.id\n            //convert ticket Employee object to just be one level deep with the employee name\n            action.ticket.Employee = action.ticket.Employee.name\n            //find ticket to update\n            const ticketToUpdate = nextState[ticketId]\n            //replace old ticket with new ticket\n            nextState[ticketId] = Object.assign({}, ticketToUpdate, action.ticket)\n            console.log('new ticket',action.ticket);\n            return nextState\n        default:\n            return state\n    }\n\n}\n\nexport default ticketReducer; ","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport employees from '../reducers/employeeReducer'\nimport session from '../reducers/sessionReducer'\nimport projects from '../reducers/projectReducer'\nimport tickets from '../reducers/ticketReducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst rootReducer = combineReducers({\n    employees,\n    projects,\n    tickets,\n    session\n})\n\nconst storeEnhancer = composeEnhancers(applyMiddleware(thunk))\n\nconst configureStore = (preloadedState) => {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        storeEnhancer\n    )\n}\n\nexport default configureStore; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './navbar.css';\nimport './login.css'\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore'\nimport { loadState, saveState } from './store/localStorage'\n\nconst preloadedState = loadState()\nconst store = configureStore(preloadedState)\n\n//subscribe to the store to get updated state to save to preloaded state\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","const INITIAL_STATE = 'initialState'\n\n//import to wrap all logic in try/catch incase there are issues retrieving or parsing local storage\nexport const loadState = () => {\n    try {\n        const stateJSON = localStorage.getItem(INITIAL_STATE)\n        //conditional for if state is not persisted in localStorage (ex. new user session)\n        if (stateJSON === null) {\n            //returning undefined at state will allow the reducers to use it default state shape\n            return undefined\n        }\n        //parse json data\n        return JSON.parse(stateJSON)\n    } catch (error) {\n        console.warn(error)\n        //if error return undefined\n        return undefined\n    }\n}\n\nexport const saveState = (state) => {\n    try {\n        //stringify the state shape before setting in local storage\n        const stateJSON = JSON.stringify(state)\n        localStorage.setItem(INITIAL_STATE, stateJSON)\n    } catch (error) {\n        console.warn(error)\n    }\n}"],"sourceRoot":""}