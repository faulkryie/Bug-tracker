{"version":3,"sources":["actions/employeeAction.js","actions/projectAction.js","actions/sessionAction.js","session/LoginForm.js","components/EmployeeTable.js","components/Employee.js","components/AddProjectForm.js","components/ProjectTable.js","components/Project.js","components/Ticket.js","components/LogoutButton.js","components/AdminDashboard.js","session/SignupForm.js","App.js","reducers/employeeReducer.js","reducers/sessionReducer.js","reducers/projectReducer.js","reducers/ticketReducer.js","actions/ticketAction.js","store/configureStore.js","index.js"],"names":["loadEmployees","employees","type","removeOneEmployee","employeeId","getEmployees","dispatch","a","fetch","res","json","ok","console","log","loadProjects","projects","addProject","project","loadSession","user","token","login","email","password","body","method","headers","JSON","stringify","Cookies","get","employee","signup","name","LoginForm","useDispatch","useState","setEmail","setPassword","loginUser","e","preventDefault","onSubmit","onChange","target","value","required","EmployeeTable","employeesArray","deleteEmployee","window","confirm","id","parsedEmployeeId","parseInt","error","message","map","key","roleId","mapRoleIdToName","onClick","Employee","useSelector","state","selectedEmployeeId","setSelectedEmployeeId","roleToChange","setRoleToChange","Object","values","useEffect","length","htmlFor","AddProjectForm","setName","description","setDescription","employeeIdArray","createProject","ProjectTable","projectsArray","Employees","comments","comment","split","text","Project","isHidden","setIsHidden","className","Ticket","tickets","ticketsArray","ticket","severityLevel","status","LogoutButton","logoutUser","remove","AdminDashboard","SignupForm","signupUser","ProtectedRoute","Component","component","rest","render","props","to","AuthRoute","App","exact","path","AppContainer","session","authToken","employeeReducer","nextState","action","assign","sessionReducer","currentUserId","role","projectReducer","ticketReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","storeEnhancer","applyMiddleware","thunk","store","initialState","createStore","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14148885.chunk.js","sourcesContent":["export const LOAD_EMPLOYEES = 'LOAD_EMPLOYEES'\nexport const REMOVE_EMPLOYEES = 'REMOVE_EMPLOYEES'\nexport const REMOVE_ONE_EMPLOYEE = 'REMOVE_ONE_EMPLOYEE'\n\n\n//actions\nexport const loadEmployees = (employees) => ({\n    type: LOAD_EMPLOYEES,\n    employees\n\n})\n\nexport const removeEmployees = () => ({\n    type: REMOVE_EMPLOYEES\n})\n\nexport const removeOneEmployee = (employeeId) => ({\n    type: REMOVE_ONE_EMPLOYEE,\n    employeeId\n})\n\n//thunk\nexport const getEmployees = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/users')\n\n        //logged in user\n        const { employees } = await res.json()\n        if(!res.ok){    \n            throw res\n        }\n        dispatch(loadEmployees(employees))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\n//thunk\nexport const updateEmployeeRole = (employeeId, roleId) => async (dispatch) => {\n    const parsedEmployeeId = parseInt(employeeId, 10)\n    try {\n        const body = { roleId }\n        const res = await fetch(`/api/users/${parsedEmployeeId}`, {\n            method: 'PUT',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        dispatch(getEmployees())\n    } catch (err) {\n        console.error(err.message)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const deleteEmployee = (employeeId) => async (dispatch) => {\n    const parsedEmployeeId = parseInt(employeeId, 10)\n    try {\n        const res = await fetch(`/api/users/${parsedEmployeeId}`, {\n            method: 'DELETE'\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        dispatch(removeOneEmployee(parsedEmployeeId))\n    } catch (err) {\n        console.error(err.message)\n        //enventually will push into errors array in store\n    }\n}","export const LOAD_PROJECTS = 'LOAD_PROJECTS'\nexport const ADD_PROJECT = 'ADD_PROJECT'\nexport const REMOVE_PROJECTS = 'REMOVE_PROJECTS'\n\n\n//actions\nconst loadProjects = (projects) => ({\n    type: LOAD_PROJECTS,\n    projects\n})\n\nconst addProject = (project) => ({\n    type: ADD_PROJECT,\n    project\n})\n\nexport const removeProjects = () => ({\n    type: REMOVE_PROJECTS\n})\n\n\n\n//thunks\n\nexport const getProjects = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/projects')\n\n        \n        const { projects } = await res.json()\n        console.log('inside getprojects thunks', projects)\n        dispatch(loadProjects(projects))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const createProject = (name, description, employeeId) => async (dispatch) => {\n    //fetch call to create project for admin only\n    //dispatch add project\n\n    const employeeIdArray = [employeeId]\n\n    const body = {\n        name,\n        description,\n        employeeIdArray\n    }\n\n    try {\n        const res = await fetch('/api/projects', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if(!res.ok){\n            throw res\n        }\n\n        const { project } = await res.json()\n        console.log('inside getprojects thunks', project)\n        dispatch(addProject(project))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n\n}\n","import Cookies from 'js-cookie'\nimport { removeEmployees } from './employeeAction'\nimport { removeProjects } from './projectAction'\nexport const LOAD_SESSION = 'LOAD_SESSION'   \nexport const REMOVE_SESSION = 'REMOVE_SESSION' \n\n\n\n//actions\nexport const loadSession = (user, token) => ({\n    type: LOAD_SESSION,\n    user, \n    token\n\n})\n\nexport const removeSession = () => ({\n    type: REMOVE_SESSION\n})\n\n\n//thunks\n//getState is also a param after dispatch -- check docs for more info\nexport const login = ( email, password ) => async (dispatch) => {    \n    //build a body for req\n    const body = {\n        email, \n        password\n    }\n\n    \n    //make a fetch call to db to login user\n    try{\n        const res = await fetch('/api/session', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        \n        //grab current token\n        const token = Cookies.get('token')\n\n        //logged in user\n        const { employee } = await res.json()\n\n        dispatch(loadSession(employee, token))\n    } catch (err){\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n    \n}\n\nexport const logout = () => (dispatch) => {\n    Cookies.remove('token')\n    dispatch(removeSession())\n    dispatch(removeEmployees())\n    dispatch(removeProjects())\n} \n\nexport const signup = ( name, email, password ) => async (dispatch) => {\n    //post req to /users\n    //dispatch load session \n\n    //build a body for req\n    const body = {\n        name,\n        email, \n        password\n    }\n\n    \n    //make a fetch call to db to login user\n    try{\n        const res = await fetch('/api/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        \n        //grab current token\n        const token = Cookies.get('token')\n\n        //logged in user\n        const { employee } = await res.json()\n\n        dispatch(loadSession(employee, token))\n    } catch (err){\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n\n}\n\n","import React, { useState } from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { login } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\n\nconst LoginForm = () => {\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('demo1@example.com')\n    const [password, setPassword] = useState('password1')\n    const updateEmail = (e) => setEmail(e.target.value)\n    const updatePassword = (e) => setPassword(e.target.value)\n\n    //handle submit\n    const loginUser = async (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <div>\n            <form onSubmit={loginUser}>\n                <h2>login here</h2>\n                <input onChange={updateEmail} name='email' type='email' value={email} required />\n                <input onChange={updatePassword} name='password' type='password' value={password} required />\n                <button type='submit'>Submit</button>\n            </form>\n        </div>\n    )\n}\n\n\n\nexport default LoginForm","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport * as employeeAction from '../actions/employeeAction'\n\nconst EmployeeTable = ({ employeesArray }) => {\n    const dispatch = useDispatch()\n    const mapRoleIdToName = (roleId) => {\n        switch (roleId) {\n            case 1:\n                return 'admin'\n            case 2:\n                return 'project manager'\n            case 3:\n                return 'dev'\n            case 4:\n                return 'submitter'\n            default:\n                return null\n\n        }\n    }\n\n    const deleteEmployee = (e) => {\n        if (window.confirm('Are you sure you wish to delete this item?')){\n            dispatch(employeeAction.deleteEmployee(e.target.id))\n        }\n        return\n    }\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Employee</th>\n                    <th>Role</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {employeesArray.map(employee => {\n                    return <tr key={employee.id}>\n                        <td>\n                            {employee.name}\n                        </td>\n                        <td>{mapRoleIdToName(employee.roleId)}</td>\n                        <td><button id={employee.id} onClick={deleteEmployee}>Delete</button></td>\n                    </tr>\n                }\n                )}\n            </tbody>\n        </table>\n    )\n}\n\nexport default EmployeeTable; ","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getEmployees } from '../actions/employeeAction'\nimport EmployeeTable from './EmployeeTable'\nimport { updateEmployeeRole } from '../actions/employeeAction'\n\nconst Employee = () => {\n    const dispatch = useDispatch()\n    const employees = useSelector(state => state.employees)\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState('')\n    const [roleToChange, setRoleToChange] = useState('')\n    const employeesArray = Object.values(employees)\n\n    useEffect(() => {\n        dispatch(getEmployees())\n    }, [dispatch])\n\n    //hanldle selected employee\n    const selectedEmployee = (e) => {\n        setSelectedEmployeeId(e.target.value)\n    }\n\n    //handle role change \n    const roleChange = (e) => {\n        setRoleToChange(e.target.value)\n    }\n    // console.log('selectedEmployeeId', selectedEmployeeId)\n    // console.log('roleToChange', roleToChange)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(updateEmployeeRole(selectedEmployeeId, roleToChange))\n    }\n\n    // console.log(Object.values(employees))\n    if (employeesArray.length > 0) {\n        return (\n            <div>\n                <h1>employee component</h1>\n\n                <EmployeeTable employeesArray={employeesArray}/>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor='employee'>Edit Employee Roles: </label>\n                <select onChange={selectedEmployee} id='employee' name='employee' value={selectedEmployeeId} required>\n                    <option value='' key={-1}>Select Employee</option>\n                    {employeesArray.map(employee => (\n                        <option key={employee.id} value={employee.id}>{employee.name}</option>\n                        \n                    ))\n                    }\n                </select>\n                <select onChange={roleChange} id='roles' name='roles' value={roleToChange} required>\n                    <option value='' key={-1}>Select Role</option>\n                    <option value={0} key={0}>no role</option>\n                    <option value={1} key={1}>admin</option>\n                    <option value={2} key={2}>project manager</option>\n                    <option value={3} key={3}>dev</option>\n                    <option value={4} key={4}>submitter</option>\n                    \n                    \n                </select>\n                <button type='submit'>Submit</button>\n            </form>\n                \n            </div>\n        )\n    } else {\n        return <h2>no employees available</h2>\n    }\n\n\n\n}\n\nexport default Employee;","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createProject } from '../actions/projectAction'\n\n\n\nconst AddProjectForm = () => {\n\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const updateName = (e) => setName(e.target.value)\n    const updateDescription = (e) => setDescription(e.target.value)\n    //subscribe to the employee slice of state for the drop down\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState('')\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees)\n\n    //handle selectedEmployee change\n    const selectedEmployee = (e) => {\n        setSelectedEmployeeId(e.target.value)\n    }\n\n\n    //handle submit add project\n    const addProject = (e) => {\n        e.preventDefault()\n        dispatch(createProject(name, description, selectedEmployeeId))\n        \n    }\n    return (\n        <div>\n            <h1>project form</h1>\n            <form onSubmit={addProject}>\n                <label htmlFor='name'>Name:</label>\n                <input onChange={updateName} name='name' id='name' value={name}/>\n                <label htmlFor='description'>Description:</label>\n                <input onChange={updateDescription} name='description' id='description' value={description}/>\n\n                <label htmlFor='employee'>Add Employee: </label>\n                <select onChange={selectedEmployee} id='employee' name='employee' value={selectedEmployeeId}>\n                    <option value='' key={-1}>Select Employee</option>\n                    {employeesArray.map(employee => (\n                        <option key={employee.id} value={employee.id}>{employee.name}</option>\n                        \n                    ))\n                    }\n                </select>\n\n                <button type='submit'>Add</button>\n            </form>\n        </div>\n\n    )\n}\n\nexport default AddProjectForm; ","import React from 'react'\n\nconst ProjectTable = ({ projectsArray }) => {\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Project</th>\n                    <th>description</th>\n                    <th>assigned employees</th>\n                    <th>comments</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {projectsArray.map(project => {\n                    return <tr key={project.id}>\n                        <td>\n                            {project.name}\n                        </td>\n                        <td>{project.description}</td>\n                        <td>\n                            {project.Employees ? project.Employees.map(employee => {\n                                return <li key={employee.id}>\n                                    {employee.name}\n                                </li>\n                            }\n                            ): ''\n                        }\n                        </td>\n                        <td>{project.comments ?\n                            project.comments.map(comment => {\n                                const [employeeId, text] = comment.split('__')\n                                const parsedEmployeeId = parseInt(employeeId, 10)\n                                return <li key={parsedEmployeeId}>{text}</li>\n                            })\n                            : <h3>no comments</h3>\n                        }</td>\n                        <td><button id={project.id} >Delete</button></td>\n                    </tr>\n                }\n                )}\n            </tbody>\n        </table>\n    )\n}\n\nexport default ProjectTable; ","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProjects } from '../actions/projectAction'\nimport AddProjectForm from './AddProjectForm'\nimport ProjectTable from './ProjectTable'\nimport '../project.css'\n\nconst Project = () => {\n    const dispatch = useDispatch()\n    const projects = useSelector(state => state.projects)\n    const projectsArray = Object.values(projects)\n    const [isHidden, setIsHidden] = useState(true)\n\n\n    useEffect(() => {\n        dispatch(getProjects())\n    }, [dispatch])\n\n    //handle on click create projecdt\n    const addProject = (e) => {\n        setIsHidden(!isHidden)\n    }\n\n    // console.log(Object.values(employees))\n    if (projectsArray.length > 0) {\n        return (\n            <div >\n                <button onClick={addProject}>add project</button>\n                <div className={isHidden ? 'hidden' : ''}>\n                    <AddProjectForm />\n                </div>\n                <h1>Project component</h1>\n                <ProjectTable projectsArray={projectsArray} />\n            </div>\n        )\n    } else {\n        return <h2>no projects found</h2>\n    }\n}\n\nexport default Project; ","import React from 'react'\nimport { useSelector } from 'react-redux'\n\n\nconst Ticket = () => {\n    const tickets = useSelector(state => state.tickets)\n    const ticketsArray = Object.values(tickets)\n    return (\n        <div>\n            <h1>Ticket Component</h1>\n            {ticketsArray.map(ticket => {\n                return <tr key={ticket.id}>\n                    <td>\n                        {ticket.name}\n                    </td>\n                    <td>{ticket.description}</td>\n                    <td>{ticket.severityLevel}</td>\n                    <td>{ticket.status}</td>\n                    <td>{ticket.type}</td>\n                    <td><button id={ticket.id}>Delete</button></td>\n                </tr>\n            }\n            )}\n        </div>\n    )\n}\n\nexport default Ticket; ","import React from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { logout } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\n\nconst LogoutButton = () => {\n    const dispatch = useDispatch()\n\n    //handle click\n    const logoutUser = async (e) => {\n        dispatch(logout())\n    }\n\n    return (\n        <div>\n            <button onClick={logoutUser} type='submit'>Logout</button>\n        </div>\n    )\n}\n\nexport default LogoutButton; ","import React from 'react'\nimport Employee from './Employee'\nimport Project from './Project'\nimport Ticket from './Ticket'\nimport LogoutButton from './LogoutButton'\nimport '../adminDashboard.css';\n\n\nconst AdminDashboard = () => {\n    return (\n        <div>\n            <h1>admin dashboard</h1>\n            <nav>\n                <LogoutButton />\n            </nav>\n            <div className='employee-container'>\n                <Employee />\n            </div>\n            <div className='employee-container'>\n                <Project />\n            </div>\n            <div className='employee-container'>\n                <Ticket />\n            </div>\n        </div>\n    )\n}\n\nexport default AdminDashboard; ","import React, { useState } from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { signup } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\n\nconst SignupForm = () => {\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const updateName = (e) => setName(e.target.value)\n    const updateEmail = (e) => setEmail(e.target.value)\n    const updatePassword = (e) => setPassword(e.target.value)\n\n    //handle submit\n    const signupUser = async (e) => {\n        e.preventDefault()\n        dispatch(signup( name, email, password ))\n    }\n\n    return (\n        <div>\n            <form onSubmit={signupUser}>\n                <h2>Sign Up here</h2>\n                <label htmlFor='name'>Name: </label>\n                <input id='name' onChange={updateName} name='name' type='name' value={name} required />\n                <label htmlFor='email'>Email: </label>\n                <input id='email' onChange={updateEmail} name='email' type='email' value={email} required />\n                <label htmlFor='password'>password: </label>\n                <input id='password' onChange={updatePassword} name='password' type='password' value={password} required />\n                <button type='submit'>Sign Up</button>\n            </form>\n        </div>\n    )\n}\n\n\n\nexport default SignupForm; ","import React from 'react';\nimport { Switch, NavLink, Route, Redirect } from 'react-router-dom'\nimport LoginForm from './session/LoginForm'\nimport AdminDashboard from './components/AdminDashboard'\nimport { useSelector } from 'react-redux';\nimport SignupForm from './session/SignupForm';\n\n//rest encapsulates path and exact being passed down\n//redirect user if not logged in\nconst ProtectedRoute = ({ component: Component, token, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={ (props) => token ? <Component {...props} /> : <Redirect to='/login'/> }\n    />\n  )\n}\n//if user is logged in, redirect user back to dashboard\nconst AuthRoute = ({ component: Component, token, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={ (props) => token ? <Redirect to='/admin/dashboard'/> : <Component {...props} /> }\n    />\n  )\n}\n\nfunction App({token}) {\n  return (\n    <div>\n      <h1>Trackerfy</h1>\n      <nav>\n        <NavLink to='/login' >Login</NavLink>\n        <NavLink to='/signup' >Sign Up</NavLink>\n        <NavLink to='/admin/dashboard' >Dashboard</NavLink>\n      </nav>\n      <Switch>\n        <ProtectedRoute token={token} exact path='/admin/dashboard' component={AdminDashboard} />\n        <AuthRoute exact token={token} path='/login' component={LoginForm} />\n        <AuthRoute token={token} path='/signup' component={SignupForm}/>\n      </Switch>\n    </div>\n  );\n}\n\nconst AppContainer = () => {\n  const token = useSelector( state => state.session.authToken )\n  return <App token={token}/>\n  \n}\n\nexport default AppContainer;\n","import {\nLOAD_EMPLOYEES, \nREMOVE_EMPLOYEES,\nREMOVE_ONE_EMPLOYEE\n} from '../actions/employeeAction'\n\n\n//reducer\nconst employeeReducer = (state = {}, action) => {\n    let nextState;\n    switch(action.type){\n        case LOAD_EMPLOYEES: \n            nextState = {}\n            action.employees.map( employee => {\n               return nextState[employee.id] = employee\n            })\n            return nextState\n        case REMOVE_EMPLOYEES: \n            return {}\n        case REMOVE_ONE_EMPLOYEE: \n            nextState = Object.assign({}, {...state})\n            delete nextState[action.employeeId]\n            return nextState\n        default: \n            return state\n    }\n}\n\nexport default employeeReducer\n\n","import {\n    LOAD_SESSION, \n    REMOVE_SESSION\n    } from '../actions/sessionAction'\n    \n    \n    //reducer\n    const sessionReducer = (state = {}, action) => {\n        switch(action.type){\n            case LOAD_SESSION: \n                return Object.assign({}, { currentUserId: action.user.id, role: action.user.roleId, authToken: action.token })\n            case REMOVE_SESSION: \n                return {}\n            default: \n                return state\n        }\n    }\n    \n    export default sessionReducer","import {\n    ADD_PROJECT,\n    LOAD_PROJECTS,\n    REMOVE_PROJECTS,\n\n} from '../actions/projectAction'\n\n\n//reducer\nconst projectReducer = (state = {}, action) => {\n    let nextState;\n    switch (action.type) {\n        case LOAD_PROJECTS:\n            nextState = {}\n            action.projects.map(project => {\n                return nextState[project.id] = project\n            })\n            return nextState\n        case ADD_PROJECT: \n            nextState = {\n                ...state,\n                [action.project.id]: action.project\n            }\n            return nextState\n        case REMOVE_PROJECTS: \n            return {}\n        default:\n            return state\n    }\n}\n\nexport default projectReducer\n\n","import {\n    LOAD_TICKETS\n} from '../actions/ticketAction'\n\nconst ticketReducer = (state = {}, action) => {\n    let nextState;\n    switch(action.type){\n        case LOAD_TICKETS: \n        nextState = {}\n        action.tickets.map( ticket => {\n           return nextState[ticket.id] = ticket\n        })\n        return nextState\n        default:\n            return state\n    }\n\n}\n\nexport default ticketReducer; ","export const LOAD_TICKETS = 'LOAD_TICKETS'\n\n//actions\nconst loadTickets = (tickets) => ({\n    type: LOAD_TICKETS,\n    tickets\n})\n\nexport const getTickets = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/tickets')\n\n        if(!res.ok){    \n            throw res\n        }\n        const { tickets } = await res.json()\n        console.log(tickets)\n        dispatch(loadTickets(tickets))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n} ","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport employees from '../reducers/employeeReducer'\nimport session from '../reducers/sessionReducer'\nimport projects from '../reducers/projectReducer'\nimport tickets from '../reducers/ticketReducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst rootReducer = combineReducers({\n    employees,\n    projects,\n    tickets,\n    session\n})\n\nconst storeEnhancer = composeEnhancers(applyMiddleware(thunk))\n\nconst configureStore = (initialState) => {\n    return createStore(\n        rootReducer,\n        initialState,\n        storeEnhancer\n    )\n}\n\nexport default configureStore; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}