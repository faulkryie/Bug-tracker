{"version":3,"sources":["actions/employeeAction.js","actions/projectAction.js","actions/ticketAction.js","actions/sessionAction.js","session/LoginForm.js","components/EmployeeTable.js","components/Employee.js","components/AddProjectForm.js","components/ProjectTable.js","components/Project.js","components/EditTicketPopup.js","components/TicketTable.js","components/Ticket.js","pages/Dashboard.js","session/SignupForm.js","components/LogoutButton.js","components/Navbar.js","App.js","reducers/employeeReducer.js","reducers/sessionReducer.js","reducers/projectReducer.js","reducers/ticketReducer.js","store/configureStore.js","index.js","store/localStorage.js"],"names":["loadEmployees","employees","type","removeOneEmployee","employeeId","getEmployees","dispatch","a","fetch","res","json","ok","console","log","loadProjects","projects","addProject","project","loadTickets","tickets","updateTicket","ticket","loadSession","user","token","login","email","password","body","method","headers","JSON","stringify","Cookies","get","employee","signup","name","LoginForm","useDispatch","useState","setEmail","setPassword","loginUser","e","preventDefault","onSubmit","onChange","target","value","required","EmployeeTable","employeesArray","deleteEmployee","window","confirm","id","parsedEmployeeId","parseInt","error","message","map","key","roleId","mapRoleIdToName","onClick","Employee","useSelector","state","selectedEmployeeId","setSelectedEmployeeId","roleToChange","setRoleToChange","Object","values","useEffect","length","htmlFor","AddProjectForm","setName","description","setDescription","employeeIdArray","createProject","ProjectTable","projectsArray","disabled","Employees","comments","comment","split","text","Project","isHidden","setIsHidden","className","EditTicketPopup","hidePopup","ticketName","ticketDescr","ticketId","severityLevel","setSeverityLevel","status","setStatus","setType","editTicket","TicketTable","ticketsArray","dataset","descr","data-name","data-descr","Ticket","setTicketName","setTicketDescr","setTicketId","ticketNamePopup","ticketDescrPopup","Dashboard","currentEmployeeRole","session","role","setDisabled","SignupForm","signupUser","LogoutButton","logoutUser","remove","Navbar","activeSidebar","setActiveSidebar","toggleSidebar","to","ProtectedRoute","Component","component","rest","render","props","AuthRoute","App","exact","path","AppContainer","authToken","employeeReducer","nextState","action","assign","sessionReducer","currentUserId","projectReducer","ticketReducer","ticketToUpdate","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","storeEnhancer","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","stateJSON","localStorage","getItem","parse","warn","loadState","subscribe","setItem","saveState","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e750dcd6.chunk.js","sourcesContent":["export const LOAD_EMPLOYEES = 'LOAD_EMPLOYEES'\nexport const REMOVE_EMPLOYEES = 'REMOVE_EMPLOYEES'\nexport const REMOVE_ONE_EMPLOYEE = 'REMOVE_ONE_EMPLOYEE'\n\n\n//actions\nexport const loadEmployees = (employees) => ({\n    type: LOAD_EMPLOYEES,\n    employees\n\n})\n\nexport const removeEmployees = () => ({\n    type: REMOVE_EMPLOYEES\n})\n\nexport const removeOneEmployee = (employeeId) => ({\n    type: REMOVE_ONE_EMPLOYEE,\n    employeeId\n})\n\n//thunk\nexport const getEmployees = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/users')\n\n        //logged in user\n        const { employees } = await res.json()\n        if(!res.ok){    \n            throw res\n        }\n        if(employees){\n            dispatch(loadEmployees(employees))\n        }\n        return\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\n//thunk\nexport const updateEmployeeRole = (employeeId, roleId) => async (dispatch) => {\n    const parsedEmployeeId = parseInt(employeeId, 10)\n    try {\n        const body = { roleId }\n        const res = await fetch(`/api/users/${parsedEmployeeId}`, {\n            method: 'PUT',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        dispatch(getEmployees())\n    } catch (err) {\n        console.error(err.message)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const deleteEmployee = (employeeId) => async (dispatch) => {\n    const parsedEmployeeId = parseInt(employeeId, 10)\n    try {\n        const res = await fetch(`/api/users/${parsedEmployeeId}`, {\n            method: 'DELETE'\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        dispatch(removeOneEmployee(parsedEmployeeId))\n    } catch (err) {\n        console.error(err.message)\n        //enventually will push into errors array in store\n    }\n}","export const LOAD_PROJECTS = 'LOAD_PROJECTS'\nexport const ADD_PROJECT = 'ADD_PROJECT'\nexport const REMOVE_PROJECTS = 'REMOVE_PROJECTS'\n\n\n//actions\nconst loadProjects = (projects) => ({\n    type: LOAD_PROJECTS,\n    projects\n})\n\nconst addProject = (project) => ({\n    type: ADD_PROJECT,\n    project\n})\n\nexport const removeProjects = () => ({\n    type: REMOVE_PROJECTS\n})\n\n\n\n//thunks\n\nexport const getProjects = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/projects')\n\n        \n        const { projects } = await res.json()\n        if(projects){\n            dispatch(loadProjects(projects))\n        }\n        return \n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const createProject = (name, description, employeeId) => async (dispatch) => {\n    //manually making array. git rid of this when multi select created for form\n    const employeeIdArray = [employeeId]\n\n    const body = {\n        name,\n        description,\n        employeeIdArray\n    }\n\n    try {\n        const res = await fetch('/api/projects', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if(!res.ok){\n            throw res\n        }\n\n        const { project } = await res.json()\n        console.log('inside getprojects thunks', project)\n        dispatch(addProject(project))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n\n}\n","export const LOAD_TICKETS = 'LOAD_TICKETS'\nexport const REMOVE_TICKETS = 'REMOVE_TICKETS'\nexport const UPDATE_TICKET = 'UPDATE_TICKET'\n\n\n//actions\nconst loadTickets = (tickets) => ({\n    type: LOAD_TICKETS,\n    tickets\n})\n\nconst updateTicket = (ticket) => ({\n    type: UPDATE_TICKET,\n    ticket\n})\n\n\nexport const removeTickets = () => ({\n    type: REMOVE_TICKETS\n})\n\nexport const getTickets = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/tickets')\n\n        if(!res.ok){    \n            throw res\n        }\n        const { tickets } = await res.json()\n        console.log('all tickets', tickets)\n        dispatch(loadTickets(tickets))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n} \n\nexport const editTicket = (name, description, severityLevel, status, type, employeeId, ticketId) => async (dispatch) => {\n    //manually making array. git rid of this when multi select created for form\n\n    const body = {\n        name,\n        description,\n        severityLevel,\n        type,\n        status, \n        employeeId\n    }\n\n    try {\n        const res = await fetch(`/api/tickets/${ticketId}`, {\n            method: 'PUT', \n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if(!res.ok){    \n            throw res\n        }\n        const { ticket } = await res.json()\n        dispatch(updateTicket(ticket))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}","import Cookies from 'js-cookie'\nimport { removeEmployees } from './employeeAction'\nimport { removeProjects } from './projectAction'\nimport { removeTickets } from './ticketAction'\nexport const LOAD_SESSION = 'LOAD_SESSION'   \nexport const REMOVE_SESSION = 'REMOVE_SESSION' \n\n\n\n//actions\nexport const loadSession = (user, token) => ({\n    type: LOAD_SESSION,\n    user, \n    token\n\n})\n\nexport const removeSession = () => ({\n    type: REMOVE_SESSION\n})\n\n\n//thunks\n//getState is also a param after dispatch -- check docs for more info\nexport const login = ( email, password ) => async (dispatch) => {    \n    //build a body for req\n    const body = {\n        email, \n        password\n    }\n\n    \n    //make a fetch call to db to login user\n    try{\n        const res = await fetch('/api/session', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        \n        //grab current token\n        const token = Cookies.get('token')\n\n        //logged in user\n        const { employee } = await res.json()\n\n        dispatch(loadSession(employee, token))\n    } catch (err){\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n    \n}\n\nexport const logout = () => (dispatch) => {\n    Cookies.remove('token')\n    dispatch(removeSession())\n    dispatch(removeEmployees())\n    dispatch(removeProjects())\n    dispatch(removeTickets())\n} \n\nexport const signup = ( name, email, password ) => async (dispatch) => {\n    //post req to /users\n    //dispatch load session \n\n    //build a body for req\n    const body = {\n        name,\n        email, \n        password\n    }\n\n    \n    //make a fetch call to db to login user\n    try{\n        const res = await fetch('/api/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        if(!res.ok){\n            throw res\n        }\n        \n        //grab current token\n        const token = Cookies.get('token')\n\n        //logged in user\n        const { employee } = await res.json()\n\n        dispatch(loadSession(employee, token))\n    } catch (err){\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n\n}\n\n","import React, { useState } from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { login } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\n\nconst LoginForm = () => {\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('demo1@example.com')\n    const [password, setPassword] = useState('password1')\n    const updateEmail = (e) => setEmail(e.target.value)\n    const updatePassword = (e) => setPassword(e.target.value)\n\n    //handle submit\n    const loginUser = async (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <div>\n            <form onSubmit={loginUser}>\n                <h2>login here</h2>\n                <input onChange={updateEmail} name='email' type='email' value={email} required />\n                <input onChange={updatePassword} name='password' type='password' value={password} required />\n                <button type='submit'>Submit</button>\n            </form>\n        </div>\n    )\n}\n\n\n\nexport default LoginForm","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport * as employeeAction from '../actions/employeeAction'\n\nconst EmployeeTable = ({ employeesArray }) => {\n    const dispatch = useDispatch()\n    const mapRoleIdToName = (roleId) => {\n        switch (roleId) {\n            case 1:\n                return 'admin'\n            case 2:\n                return 'project manager'\n            case 3:\n                return 'dev'\n            case 4:\n                return 'submitter'\n            default:\n                return null\n\n        }\n    }\n\n    const deleteEmployee = (e) => {\n        if (window.confirm('Are you sure you wish to delete this item?')){\n            dispatch(employeeAction.deleteEmployee(e.target.id))\n        }\n        return\n    }\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Employee</th>\n                    <th>Role</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {employeesArray.map(employee => {\n                    return <tr key={employee.id}>\n                        <td>\n                            {employee.name}\n                        </td>\n                        <td>{mapRoleIdToName(employee.roleId)}</td>\n                        <td><button id={employee.id} onClick={deleteEmployee}>Delete</button></td>\n                    </tr>\n                }\n                )}\n            </tbody>\n        </table>\n    )\n}\n\nexport default EmployeeTable; ","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getEmployees } from '../actions/employeeAction'\nimport EmployeeTable from './EmployeeTable'\nimport { updateEmployeeRole } from '../actions/employeeAction'\n\nconst Employee = () => {\n    const dispatch = useDispatch()\n    const employees = useSelector(state => state.employees)\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState('')\n    const [roleToChange, setRoleToChange] = useState('')\n    const employeesArray = Object.values(employees)\n\n    useEffect(() => {\n        dispatch(getEmployees())\n    }, [dispatch])\n\n    //hanldle selected employee\n    const selectedEmployee = (e) => {\n        setSelectedEmployeeId(e.target.value)\n    }\n\n    //handle role change \n    const roleChange = (e) => {\n        setRoleToChange(e.target.value)\n    }\n    // console.log('selectedEmployeeId', selectedEmployeeId)\n    // console.log('roleToChange', roleToChange)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(updateEmployeeRole(selectedEmployeeId, roleToChange))\n    }\n\n    // console.log(Object.values(employees))\n    if (employeesArray.length > 0) {\n        return (\n            <div>\n                <h1>Employees</h1>\n\n                <EmployeeTable employeesArray={employeesArray}/>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor='employee'>Edit Employee Roles: </label>\n                <select onChange={selectedEmployee} id='employee' name='employee' value={selectedEmployeeId} required>\n                    <option value='' key={-1}>Select Employee</option>\n                    {employeesArray.map(employee => (\n                        <option key={employee.id} value={employee.id}>{employee.name}</option>\n                        \n                    ))\n                    }\n                </select>\n                <select onChange={roleChange} id='roles' name='roles' value={roleToChange} required>\n                    <option value='' key={-1}>Select Role</option>\n                    <option value={0} key={0}>no role</option>\n                    <option value={1} key={1}>admin</option>\n                    <option value={2} key={2}>project manager</option>\n                    <option value={3} key={3}>dev</option>\n                    <option value={4} key={4}>submitter</option>\n                    \n                    \n                </select>\n                <button type='submit'>Submit</button>\n            </form>\n                \n            </div>\n        )\n    } else {\n        return null\n    }\n\n\n\n}\n\nexport default Employee;","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createProject } from '../actions/projectAction'\n\n\n\nconst AddProjectForm = () => {\n\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const updateName = (e) => setName(e.target.value)\n    const updateDescription = (e) => setDescription(e.target.value)\n    //subscribe to the employee slice of state for the drop down\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState('')\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees)\n\n    //handle selectedEmployee change\n    const selectedEmployee = (e) => {\n        setSelectedEmployeeId(e.target.value)\n    }\n\n\n    //handle submit add project\n    const addProject = (e) => {\n        e.preventDefault()\n        dispatch(createProject(name, description, selectedEmployeeId))\n        setName('')\n        setDescription('')\n        \n    }\n    return (\n        <div>\n            <h1>project form</h1>\n            <form onSubmit={addProject}>\n                <label htmlFor='name'>Name:</label>\n                <input onChange={updateName} name='name' id='name' value={name}/>\n                <label htmlFor='description'>Description:</label>\n                <input onChange={updateDescription} name='description' id='description' value={description}/>\n\n                <label htmlFor='employee'>Add Employee: </label>\n                <select onChange={selectedEmployee} id='employee' name='employee' value={selectedEmployeeId}>\n                    <option value='' key={-1}>Select Employee</option>\n                    {employeesArray.map(employee => (\n                        <option key={employee.id} value={employee.id}>{employee.name}</option>\n                        \n                    ))\n                    }\n                </select>\n\n                <button type='submit'>Add</button>\n            </form>\n        </div>\n\n    )\n}\n\nexport default AddProjectForm; ","import React from 'react'\n\nconst ProjectTable = ({ projectsArray, disabled }) => {\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Project</th>\n                    <th>description</th>\n                    <th>assigned employees</th>\n                    <th>comments</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {projectsArray.map(project => {\n                    return <tr key={project.id}>\n                        <td>\n                            {project.name}\n                        </td>\n                        <td>{project.description}</td>\n                        <td>\n                            {project.Employees ? project.Employees.map(employee => {\n                                return <li key={employee.id}>\n                                    {employee.name}\n                                </li>\n                            }\n                            ): ''\n                        }\n                        </td>\n                        <td>{project.comments ?\n                            project.comments.map(comment => {\n                                const [employeeId, text] = comment.split('__')\n                                const parsedEmployeeId = parseInt(employeeId, 10)\n                                return <li key={parsedEmployeeId}>{text}</li>\n                            })\n                            : <h3>no comments</h3>\n                        }</td>\n                        <td><button disabled={disabled} id={project.id} >Delete</button></td>\n                    </tr>\n                }\n                )}\n            </tbody>\n        </table>\n    )\n}\n\nexport default ProjectTable; ","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProjects } from '../actions/projectAction'\nimport AddProjectForm from './AddProjectForm'\nimport ProjectTable from './ProjectTable'\n\n\nconst Project = ({disabled}) => {\n    const dispatch = useDispatch()\n    const projects = useSelector(state => state.projects)\n    const projectsArray = Object.values(projects)\n    const [isHidden, setIsHidden] = useState(true)\n\n\n    useEffect(() => {\n        dispatch(getProjects())\n    }, [dispatch])\n\n    //handle on click create projecdt\n    const addProject = (e) => {\n        setIsHidden(!isHidden)\n    }\n\n    // console.log(Object.values(employees))\n    if (projectsArray.length > 0) {\n        return (\n            <div >\n                <button disabled={disabled} onClick={addProject}>add project</button>\n                <div className={isHidden ? 'hidden' : ''}>\n                    <AddProjectForm />\n                </div>\n                <h1>Projects</h1>\n                <ProjectTable disabled={disabled} projectsArray={projectsArray} />\n            </div>\n        )\n    } else {\n        return <h2>no projects found</h2>\n    }\n}\n\nexport default Project; ","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editTicket } from '../actions/ticketAction'\n\n\nconst EditTicketPopup = ({ hidePopup, ticketName, ticketDescr, ticketId }) => {\n    const dispatch = useDispatch()\n    // console.log('inside popup', ticketName, ticketDescr);\n    const [name, setName] = useState(ticketName)\n    // const updateName = (e) => setName(e.target.value)\n    const [description, setDescription] = useState(ticketDescr)\n    const updateDescription = (e) => setDescription(e.target.value)\n    const [severityLevel, setSeverityLevel] = useState('low')\n    const updateSeverityLevel = (e) => setSeverityLevel(e.target.value)\n    const [status, setStatus] = useState('work in progress')\n    const updateStatus = (e) => setStatus(e.target.value)\n    const [type, setType] = useState('bug/error')\n    const updateType = (e) => setType(e.target.value)\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState('')\n    const selectedEmployee = (e) => setSelectedEmployeeId(e.target.value)\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees)\n\n    //handle submit \n    const addTicket = (e) => {\n        e.preventDefault()\n        dispatch(editTicket(name, description, severityLevel, status, type, selectedEmployeeId, ticketId))\n        console.log('in popup',name, description, severityLevel, status, type, ticketId, selectedEmployeeId)\n        setName('')\n        setDescription('')\n        hidePopup()\n    }\n\n    //handle close click\n    const close = (e) => {\n        hidePopup()\n    }\n\n    return (\n        <div className=\"popup\">\n            <div className='popup__content'>\n                <span onClick={close} className='close'>exit</span>\n                <h3>edit ticket pop comp</h3>\n                <form onSubmit={addTicket}>\n                    <label htmlFor='name'>Name: {ticketName} </label>\n\n                    <label htmlFor='description'>Description: </label>\n                    <textarea onChange={updateDescription} name='description' id='description' value={description} />\n                    <label htmlFor='severityLevel'>Severity Level: </label>\n                    <select id='severityLevel' onChange={updateSeverityLevel} value={severityLevel}>\n                        <option value='low'>Low</option>\n                        <option value='medium'>Medium</option>\n                        <option value='high'>High</option>\n                    </select>\n                    <label htmlFor='status'>status: </label>\n                    <select id='status' onChange={updateStatus} value={status}>\n                        <option value='work in progress'>Work In Progress</option>\n                        <option value='completed'>Completed</option>\n                    </select>\n                    <label htmlFor='type'>Type: </label>\n                    <select id='type' onChange={updateType} value={type}>\n                        <option value='bug/error'>Bug/Error</option>\n                        <option value='task'>Task</option>\n                    </select>\n                    <label htmlFor='employee'>Add Employee: </label>\n                    <select onChange={selectedEmployee} id='employee' name='employee' value={selectedEmployeeId}>\n                        <option value='' key={-1}>Select Employee</option>\n                        {employeesArray.map(employee => (\n                            <option key={employee.id} value={employee.id}>{employee.name}</option>\n\n                        ))\n                        }\n                    </select>\n                    <button type='submit'>Add</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditTicketPopup","import React from 'react'\n\n\n\nconst TicketTable = ({ ticketsArray, disabled, hidePopup}) => {\n    console.log('ticketsArray inside ticket table', ticketsArray)\n    //handle edit click\n    const editTicket = (e) => {\n        // console.log(e.target.dataset.name)\n        // console.log(e.target.dataset.descr)\n        hidePopup(e.target.dataset.name, e.target.dataset.descr, e.target.id)\n    }\n    \n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>name</th>\n                    <th>description</th>\n                    <th>severity level</th>\n                    <th>status</th>\n                    <th>type</th>\n                    <th>assigned employee</th>\n                </tr>\n            </thead>\n            <tbody>\n            {ticketsArray.map(ticket => {\n                return <tr key={ticket.id}>\n                    <td>\n                        {ticket.name}\n                    </td>\n                    <td>{ticket.description}</td>\n                    <td>{ticket.severityLevel}</td>\n                    <td>{ticket.status}</td>\n                    <td>{ticket.type}</td>\n                    <td>{ticket.Employee}</td>\n                    <td><button disabled={disabled} id={ticket.id}>Delete</button></td>\n                    <td><button onClick={editTicket} disabled={disabled} id={ticket.id} data-name={ticket.name} data-descr={ticket.description}>Edit</button></td>\n                </tr>\n            }\n            )}\n            </tbody>\n        </table>\n    )\n}\n\nexport default TicketTable; ","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getTickets } from '../actions/ticketAction'\nimport EditTicketPopup from './EditTicketPopup'\nimport TicketTable from './TicketTable'\n\n\nconst Ticket = ({ disabled }) => {\n    const dispatch = useDispatch()\n    const tickets = useSelector(state => state.tickets)\n    const ticketsArray = Object.values(tickets)\n\n    //grab ticket name and description for edit button popup\n    const [ticketName, setTicketName] = useState('hello')\n    const [ticketDescr, setTicketDescr] = useState('goodbye')\n    const [ticketId, setTicketId] = useState('')\n\n    //hidden state for edit ticket popup\n    const [isHidden, setIsHidden] = useState(true)\n    \n    //edit button will pass  necessary ticket info nested in the edit button dataset attribute, onclick\n    const hidePopup = (ticketNamePopup, ticketDescrPopup, ticketId) => {\n        \n        if(isHidden === true){\n            setIsHidden(false)\n            setTicketName(ticketNamePopup)\n            setTicketDescr(ticketDescrPopup)\n            setTicketId(ticketId)\n        } else {\n            setIsHidden(true)\n        }\n        \n    }\n\n    useEffect(() => {\n        dispatch(getTickets())\n    }, [dispatch])\n\n    if (ticketsArray.length > 0) {\n        return (\n            <div className='ticket'>\n                <div>\n                    <h1>Tickets</h1>\n                    <TicketTable hidePopup={hidePopup} disabled={disabled} ticketsArray={ticketsArray} />\n                </div>\n                { !isHidden ? <EditTicketPopup ticketId={ticketId} ticketName={ticketName} ticketDescr={ticketDescr} hidePopup={hidePopup} /> : null}\n            </div>\n        )\n    } else {\n        return <h1>No Tickets available</h1>\n    }\n\n}\n\nexport default Ticket; ","import React, {useState, useEffect} from 'react'\nimport Employee from '../components/Employee'\nimport Project from '../components/Project'\nimport Ticket from '../components/Ticket'\nimport { useSelector } from 'react-redux'\n\n\nconst Dashboard = () => {\n    const currentEmployeeRole = useSelector(state => state.session.role)\n\n    const [disabled, setDisabled] = useState(false)\n\n    //checks user role. if not admin disabled will be true\n    //this allows to disabled all delete buttons for non admin roles\n    useEffect(()=> {\n        if(currentEmployeeRole !== 1){\n            setDisabled(true)\n        } else {\n            setDisabled(false)\n        }\n    }, [currentEmployeeRole])\n\n    return (\n        <div>\n            <h1>admin dashboard</h1>\n            <div className='component'>\n                <div className='component__topbar'></div>\n                <Employee disabled={disabled}/>\n            </div>\n            <div className='component'>\n                <div className='component__topbar'></div>\n                <Project disabled={disabled}/>\n            </div>\n            <div className='component'>\n                <div className='component__topbar'></div>\n                <Ticket disabled={disabled}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard; ","import React, { useState } from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { signup } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\n\nconst SignupForm = () => {\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const updateName = (e) => setName(e.target.value)\n    const updateEmail = (e) => setEmail(e.target.value)\n    const updatePassword = (e) => setPassword(e.target.value)\n\n    //handle submit\n    const signupUser = async (e) => {\n        e.preventDefault()\n        dispatch(signup( name, email, password ))\n    }\n\n    return (\n        <div>\n            <form onSubmit={signupUser}>\n                <h2>Sign Up here</h2>\n                <label htmlFor='name'>Name: </label>\n                <input id='name' onChange={updateName} name='name' type='name' value={name} required />\n                <label htmlFor='email'>Email: </label>\n                <input id='email' onChange={updateEmail} name='email' type='email' value={email} required />\n                <label htmlFor='password'>password: </label>\n                <input id='password' onChange={updatePassword} name='password' type='password' value={password} required />\n                <button type='submit'>Sign Up</button>\n            </form>\n        </div>\n    )\n}\n\n\n\nexport default SignupForm; ","import React from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { logout } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\n\nconst LogoutButton = () => {\n    const dispatch = useDispatch()\n\n    //handle click\n    const logoutUser = async (e) => {\n        dispatch(logout())\n    }\n\n    return (\n        <div>\n            <button onClick={logoutUser} type='submit'>Logout</button>\n        </div>\n    )\n}\n\nexport default LogoutButton; ","import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport LogoutButton from '../components/LogoutButton'\nimport * as FaIcons from 'react-icons/fa'\n\n\nfunction Navbar() {\n    const [activeSidebar, setActiveSidebar] = useState(false)\n    const toggleSidebar = (e) => setActiveSidebar(!activeSidebar)\n    return (\n        <>\n            <div className='navbar'>\n                <NavLink to='#' className='menu-bars'>\n                    <FaIcons.FaBars onClick={toggleSidebar} />\n                </NavLink>\n                <h1 className='navbar__header'>Trackerfy</h1>\n                <div className='navbar__logout'>\n                    <LogoutButton />\n                </div>\n            </div>\n            <nav className={activeSidebar ? 'nav-menu nav-menu--active' : 'nav-menu'}>\n                <ul className='nav-menu__items' onClick={toggleSidebar}>\n                    <li className='nav-menu__toggle'>\n                        <NavLink to='#' className='nav-menu__close'>\n                            <FaIcons.FaWindowClose onClick={toggleSidebar} />\n                        </NavLink>\n                    </li>\n                    <li className='nav-menu__item'>\n                        <NavLink className='nav-menu__link' to='/login' >Login</NavLink>\n                    </li>\n                    <li className='nav-menu__item'>\n                        <NavLink className='nav-menu__link' to='/signup' >Sign Up</NavLink>\n                    </li>\n                    <li className='nav-menu__item'>\n                        <NavLink className='nav-menu__link' to='/admin/dashboard' >Dashboard</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </>\n    )\n}\n\nexport default Navbar\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport LoginForm from './session/LoginForm'\nimport Dashboard from './pages/Dashboard'\nimport { useSelector } from 'react-redux';\nimport SignupForm from './session/SignupForm';\nimport Navbar from './components/Navbar';\n\n//rest encapsulates path and exact being passed down\n//redirect user if not logged in\nconst ProtectedRoute = ({ component: Component, token, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={ (props) => token ? <Component {...props} /> : <Redirect to='/login'/> }\n    />\n  )\n}\n//if user is logged in, redirect user back to dashboard\nconst AuthRoute = ({ component: Component, token, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={ (props) => token ? <Redirect to='/admin/dashboard'/> : <Component {...props} /> }\n    />\n  )\n}\n\nfunction App({token}) {\n  return (\n    <>\n    <BrowserRouter>\n        <nav>\n          <Navbar/>\n        </nav>\n        <Switch>\n          <ProtectedRoute token={token} exact path='/admin/dashboard' component={Dashboard} />\n          <AuthRoute exact token={token} path='/login' component={LoginForm} />\n          <AuthRoute token={token} path='/signup' component={SignupForm}/>\n        </Switch>\n    </BrowserRouter>\n    </>\n  );\n}\n\nconst AppContainer = () => {\n  const token = useSelector( state => state.session.authToken )\n  return <App token={token}/>\n  \n}\n\nexport default AppContainer;\n","import {\nLOAD_EMPLOYEES, \nREMOVE_EMPLOYEES,\nREMOVE_ONE_EMPLOYEE\n} from '../actions/employeeAction'\n\n\n//reducer\nconst employeeReducer = (state = {}, action) => {\n    let nextState;\n    switch(action.type){\n        case LOAD_EMPLOYEES: \n            nextState = {}\n            action.employees.map( employee => {\n               return nextState[employee.id] = employee\n            })\n            return nextState\n        case REMOVE_EMPLOYEES: \n            return {}\n        case REMOVE_ONE_EMPLOYEE: \n            nextState = Object.assign({}, {...state})\n            delete nextState[action.employeeId]\n            return nextState\n        default: \n            return state\n    }\n}\n\nexport default employeeReducer\n\n","import {\n    LOAD_SESSION, \n    REMOVE_SESSION\n    } from '../actions/sessionAction'\n    \n    \n    //reducer\n    const sessionReducer = (state = {}, action) => {\n        switch(action.type){\n            case LOAD_SESSION: \n                return Object.assign({}, { currentUserId: action.user.id, role: action.user.roleId, authToken: action.token })\n            case REMOVE_SESSION: \n                return {}\n            default: \n                return state\n        }\n    }\n    \n    export default sessionReducer","import {\n    ADD_PROJECT,\n    LOAD_PROJECTS,\n    REMOVE_PROJECTS,\n\n} from '../actions/projectAction'\n\n\n//reducer\nconst projectReducer = (state = {}, action) => {\n    let nextState;\n    switch (action.type) {\n        case LOAD_PROJECTS:\n            nextState = {}\n            action.projects.map(project => {\n                return nextState[project.id] = project\n            })\n            return nextState\n        case ADD_PROJECT: \n            nextState = {\n                ...state,\n                [action.project.id]: action.project\n            }\n            return nextState\n        case REMOVE_PROJECTS: \n            return {}\n        default:\n            return state\n    }\n}\n\nexport default projectReducer\n\n","import {\n    LOAD_TICKETS,\n    REMOVE_TICKETS,\n    UPDATE_TICKET\n} from '../actions/ticketAction'\n\nconst ticketReducer = (state = {}, action) => {\n    let nextState = Object.assign({}, state)\n    switch (action.type) {\n        case LOAD_TICKETS:\n            action.tickets.map(ticket => {\n                //convert employee object to just the name to make state shape easier to update\n                ticket.Employee = ticket.Employee.name\n                return nextState[ticket.id] = ticket\n            })\n            return nextState\n        case REMOVE_TICKETS:\n            return {}\n        case UPDATE_TICKET:\n            const ticketId = action.ticket.id\n            //convert ticket Employee object to just be one level deep with the employee name\n            action.ticket.Employee = action.ticket.Employee.name\n            //find ticket to update\n            const ticketToUpdate = nextState[ticketId]\n            //replace old ticket with new ticket\n            nextState[ticketId] = Object.assign({}, ticketToUpdate, action.ticket)\n            console.log('new ticket',action.ticket);\n            return nextState\n        default:\n            return state\n    }\n\n}\n\nexport default ticketReducer; ","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport employees from '../reducers/employeeReducer'\nimport session from '../reducers/sessionReducer'\nimport projects from '../reducers/projectReducer'\nimport tickets from '../reducers/ticketReducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst rootReducer = combineReducers({\n    employees,\n    projects,\n    tickets,\n    session\n})\n\nconst storeEnhancer = composeEnhancers(applyMiddleware(thunk))\n\nconst configureStore = (preloadedState) => {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        storeEnhancer\n    )\n}\n\nexport default configureStore; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './navbar.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore'\nimport { loadState, saveState } from './store/localStorage'\n\nconst preloadedState = loadState()\nconst store = configureStore(preloadedState)\n\n//subscribe to the store to get updated state to save to preloaded state\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","const INITIAL_STATE = 'initialState'\n\n//import to wrap all logic in try/catch incase there are issues retrieving or parsing local storage\nexport const loadState = () => {\n    try {\n        const stateJSON = localStorage.getItem(INITIAL_STATE)\n        //conditional for if state is not persisted in localStorage (ex. new user session)\n        if (stateJSON === null) {\n            //returning undefined at state will allow the reducers to use it default state shape\n            return undefined\n        }\n        //parse json data\n        return JSON.parse(stateJSON)\n    } catch (error) {\n        console.warn(error)\n        //if error return undefined\n        return undefined\n    }\n}\n\nexport const saveState = (state) => {\n    try {\n        //stringify the state shape before setting in local storage\n        const stateJSON = JSON.stringify(state)\n        localStorage.setItem(INITIAL_STATE, stateJSON)\n    } catch (error) {\n        console.warn(error)\n    }\n}"],"sourceRoot":""}