{"version":3,"sources":["actions/employeeAction.js","actions/projectAction.js","actions/ticketAction.js","actions/sessionAction.js","session/SessionNavBar.js","session/Footer.js","session/LoginForm.js","components/EmployeeTable2.js","components/EditEmployeePopup.js","components/Employee.js","components/AddProjectPopup.js","components/EditProjectPopup.js","components/ProjectTable.js","components/Project.js","components/EditTicketPopup.js","components/AddTicketPopup.js","components/TicketTable.js","components/Ticket.js","components/LogoutButton.js","components/Navbar.js","pages/Dashboard.js","session/SignupForm.js","App.js","reducers/employeeReducer.js","reducers/sessionReducer.js","reducers/projectReducer.js","reducers/ticketReducer.js","store/configureStore.js","index.js","store/localStorage.js"],"names":["loadEmployees","employees","type","removeOneEmployee","employeeId","getEmployees","dispatch","a","fetch","res","json","ok","console","log","loadProjects","projects","removeOneProject","projectId","getProjects","loadTickets","tickets","updateTicket","ticket","removeOneTicket","ticketId","addTicket","loadSession","user","token","login","email","password","body","method","headers","JSON","stringify","Cookies","get","employee","signup","name","SessionNavBar","className","to","Footer","href","size","LoginForm","useDispatch","useState","setEmail","setPassword","loginUser","e","preventDefault","onSubmit","id","label","onChange","target","value","required","variant","color","onClick","EmployeeTable2","employeesArray","disabled","deleteEmployee","alert","window","confirm","parsedEmployeeId","parseInt","error","message","style","paddingRight","overflow","height","map","key","roleId","mapRoleIdToName","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","EditEmployeePopup","hidePopup","useSelector","state","Object","values","selectedEmployeeId","setSelectedEmployeeId","roleToChange","setRoleToChange","classes","labelId","Employee","isHidden","setIsHidden","useEffect","length","AddProjectPopup","hideAddProjectPopup","setName","description","setDescription","employeeIdArray","project","createProject","rowsMax","multiline","EditProjectPopup","currentEmployeeName","currentEmployeeId","hideEditProjectPopup","projectName","projectDescr","projectEmployeeId","session","role","projectsObj","Employees","close","parsedProjectId","ProjectActions","defaultValue","ProjectTable","projectsArray","editProject","currentTarget","dataset","descr","employeeid","deleteProject","align","paddingLeft","data-name","data-descr","data-employeeid","Project","isAddProjectHidden","setIsAddProjectHidden","isEditProjectHidden","setIsEditProjectHidden","setProjectName","setProjectDescr","setProjectId","setProjectEmployeeId","projectNamePopup","projectDescrPopup","projectEmployeeIdPopup","EditTicketPopup","hideEditTicketPopup","ticketName","ticketDescr","ticketSevLvl","ticketEmployeeId","ticketStatus","severityLevel","setSeverityLevel","updateSeverityLevel","status","setStatus","updateStatus","setType","selectedEmployee","editTicket","AddTicketPopup","hideAddTicketPopup","selectedProjectId","setSelectedProjectId","createTicket","TicketTable","ticketsArray","severitylevel","deleteTicket","parsedTicketId","maxWidth","data-severitylevel","data-status","Ticket","currentEmployeeRole","setTicketName","setTicketDescr","setTicketId","ticketSeverityLevel","setTicketSeverityLevel","setTicketStatus","setTicketEmployeeId","isEditTicketHidden","setIsEditTicketHidden","isAddTicketHidden","setIsAddTicketHidden","ticketNamePopup","ticketDescrPopup","ticketSevLvlPopup","ticketStatusPopup","ticketEmployeeIdPopup","LogoutButton","logoutUser","remove","Navbar","currentEmployee","Dashboard","setDisabled","SignupForm","signupUser","ProtectedRoute","Component","component","rest","render","props","AuthRoute","App","exact","path","AppContainer","authToken","employeeReducer","nextState","action","assign","sessionReducer","currentUserId","projectReducer","ticketReducer","ticketToUpdate","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","storeEnhancer","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","stateJSON","localStorage","getItem","parse","warn","loadState","subscribe","setItem","saveState","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60bf0448.chunk.js","sourcesContent":["export const LOAD_EMPLOYEES = 'LOAD_EMPLOYEES'\nexport const REMOVE_EMPLOYEES = 'REMOVE_EMPLOYEES'\nexport const REMOVE_ONE_EMPLOYEE = 'REMOVE_ONE_EMPLOYEE'\n\n\n//actions\nexport const loadEmployees = (employees) => ({\n    type: LOAD_EMPLOYEES,\n    employees\n\n})\n\nexport const removeEmployees = () => ({\n    type: REMOVE_EMPLOYEES\n})\n\nexport const removeOneEmployee = (employeeId) => ({\n    type: REMOVE_ONE_EMPLOYEE,\n    employeeId\n})\n\n//thunk\nexport const getEmployees = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/users')\n\n        //logged in user\n        const { employees } = await res.json()\n        if(!res.ok){    \n            throw res\n        }\n        if(employees){\n            dispatch(loadEmployees(employees))\n        }\n        return\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\n//thunk\nexport const updateEmployeeRole = (employeeId, roleId) => async (dispatch) => {\n    const parsedEmployeeId = parseInt(employeeId, 10)\n    try {\n        const body = { roleId }\n        const res = await fetch(`/api/users/${parsedEmployeeId}`, {\n            method: 'PUT',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        dispatch(getEmployees())\n    } catch (err) {\n        console.error(err.message)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const deleteEmployee = (employeeId) => async (dispatch) => {\n    const parsedEmployeeId = parseInt(employeeId, 10)\n    try {\n        const res = await fetch(`/api/users/${parsedEmployeeId}`, {\n            method: 'DELETE'\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        dispatch(removeOneEmployee(parsedEmployeeId))\n    } catch (err) {\n        console.error(err.message)\n        //enventually will push into errors array in store\n    }\n}","export const LOAD_PROJECTS = 'LOAD_PROJECTS'\nexport const ADD_PROJECT = 'ADD_PROJECT'\nexport const REMOVE_PROJECTS = 'REMOVE_PROJECTS'\nexport const REMOVE_ONE_PROJECT = 'REMOVE_ONE_PROJECT'\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT'\n\n\n//actions\nconst loadProjects = (projects) => ({\n    type: LOAD_PROJECTS,\n    projects\n})\n\n// important *** commented out add project and update project because I can't seem to get the associations to \n// employees to be return when the project is updated, so the store isn't updating, and return the table not \n//rerendindering witht he updated resuls. The work around is to just call getProjects() again which grabs all projects\n//and may be slow if the db size gets larger. Right now it works\n\n// const addProject = (project) => ({\n//     type: ADD_PROJECT,\n//     project\n// })\n\n// export const updateProject = (project) => ({\n//     type: UPDATE_PROJECT,\n//     project\n// })\n\nexport const removeOneProject = (projectId) => ({\n    type: REMOVE_ONE_PROJECT,\n    projectId\n})\n\nexport const removeProjects = () => ({\n    type: REMOVE_PROJECTS\n})\n\n\n\n//thunks\n\nexport const getProjects = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/projects')\n\n\n        const { projects } = await res.json()\n        if (projects) {\n            dispatch(loadProjects(projects))\n        }\n        return\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const createProject = (name, description, employeeId) => async (dispatch) => {\n    //manually making array. git rid of this when multi select created for form\n    const employeeIdArray = [employeeId]\n\n    const body = {\n        name,\n        description,\n        employeeIdArray\n    }\n\n    try {\n        const res = await fetch('/api/projects', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        const { project } = await res.json()\n        console.log('inside getprojects thunks', project)\n        // dispatch(AddProject(project))\n        //temporary fix read note above\n        dispatch(getProjects())\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n\n}\n\nexport const editProject = (name, description, employeeId, projectId) => async (dispatch) => {\n    const parsedProjectId = parseInt(projectId, 10)\n\n    //manually make employee id array since backend is set up that way until muilti select is added to employee dropdown for projects\n    const employeeIdArray = [employeeId]\n    const body = {\n        name,\n        description,\n        employeeIdArray,\n    }\n\n    try {\n        const res = await fetch(`/api/projects/${parsedProjectId}`, {\n            method: 'PUT',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n        const { project } = await res.json()\n        console.log('in proj reducer', project)\n        // dispatch(updateProject(project))\n        //temporary fix read note above\n        dispatch(getProjects())\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const deleteProject = (projectId) => async (dispatch) => {\n    const parsedProjectId = parseInt(projectId, 10)\n    try {\n        const res = await fetch(`/api/projects/${parsedProjectId}`, {\n            method: 'DELETE'\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        dispatch(removeOneProject(parsedProjectId))\n    } catch (err) {\n        console.error(err.message)\n        //enventually will push into errors array in store\n    }\n}\n","export const LOAD_TICKETS = 'LOAD_TICKETS'\nexport const REMOVE_TICKETS = 'REMOVE_TICKETS'\nexport const REMOVE_ONE_TICKET = 'REMOVE_ONE_TICKET'\nexport const UPDATE_TICKET = 'UPDATE_TICKET'\nexport const ADD_TICKET = 'ADD_TICKET'\n\n\n//actions\nconst loadTickets = (tickets) => ({\n    type: LOAD_TICKETS,\n    tickets\n})\n\nconst updateTicket = (ticket) => ({\n    type: UPDATE_TICKET,\n    ticket\n})\n\nexport const removeOneTicket = (ticketId) => ({\n    type: REMOVE_ONE_TICKET,\n    ticketId\n})\n\nexport const removeTickets = () => ({\n    type: REMOVE_TICKETS\n})\n\nconst addTicket = (ticket) => ({\n    type: ADD_TICKET,\n    ticket\n})\n\nexport const getTickets = () => async (dispatch) => {\n    try {\n        const res = await fetch('/api/tickets')\n\n        if (!res.ok) {\n            throw res\n        }\n        const { tickets } = await res.json()\n        console.log('all tickets', tickets)\n        dispatch(loadTickets(tickets))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const createTicket = (name,\n    description,\n    severityLevel,\n    status,\n    type,\n    projectId) => async (dispatch) => {\n\n        const body = {\n            name,\n            description,\n            severityLevel,\n            status,\n            type,\n            projectId\n        }\n\n        try {\n            const res = await fetch('/api/tickets', {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n            })\n\n            if (!res.ok) {\n                throw res\n            }\n\n            const { ticket } = await res.json()\n            console.log('inside createticket thunk', ticket)\n            dispatch(addTicket(ticket))\n        } catch (err) {\n            console.log(err)\n            //enventually will push into errors array in store\n        }\n\n    }\n\nexport const editTicket = (name, description, severityLevel, status, type, employeeId, ticketId) => async (dispatch) => {\n    //manually making array. git rid of this when multi select created for form\n\n    const body = {\n        name,\n        description,\n        severityLevel,\n        type,\n        status,\n        employeeId\n    }\n\n    try {\n        const res = await fetch(`/api/tickets/${ticketId}`, {\n            method: 'PUT',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n        const { ticket } = await res.json()\n        dispatch(updateTicket(ticket))\n    } catch (err) {\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n}\n\nexport const deleteTicket = (ticketId) => async (dispatch) => {\n    const parsedTicketId = parseInt(ticketId, 10)\n    try {\n        const res = await fetch(`/api/tickets/${parsedTicketId}`, {\n            method: 'DELETE'\n        })\n\n        if (!res.ok) {\n            throw res\n        }\n\n        dispatch(removeOneTicket(parsedTicketId))\n    } catch (err) {\n        console.error(err.message)\n        //enventually will push into errors array in store\n    }\n}\n\n","import Cookies from 'js-cookie'\nimport { removeEmployees } from './employeeAction'\nimport { removeProjects } from './projectAction'\nimport { removeTickets } from './ticketAction'\nexport const LOAD_SESSION = 'LOAD_SESSION'   \nexport const REMOVE_SESSION = 'REMOVE_SESSION' \n\n\n\n//actions\nexport const loadSession = (user, token) => ({\n    type: LOAD_SESSION,\n    user, \n    token\n\n})\n\nexport const removeSession = () => ({\n    type: REMOVE_SESSION\n})\n\n\n//thunks\n//getState is also a param after dispatch -- check docs for more info\nexport const login = ( email, password ) => async (dispatch) => {    \n    //build a body for req\n    const body = {\n        email, \n        password\n    }\n\n    \n    //make a fetch call to db to login user\n    try{\n        const res = await fetch('/api/session', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        \n        //grab current token\n        const token = Cookies.get('token')\n\n        //logged in user\n        const { employee } = await res.json()\n\n        dispatch(loadSession(employee, token))\n        console.log('employee', employee)\n    } catch (err){\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n    \n}\n\nexport const logout = () => (dispatch) => {\n    Cookies.remove('token')\n    dispatch(removeSession())\n    dispatch(removeEmployees())\n    dispatch(removeProjects())\n    dispatch(removeTickets())\n} \n\nexport const signup = ( name, email, password ) => async (dispatch) => {\n    //post req to /users\n    //dispatch load session \n\n    //build a body for req\n    const body = {\n        name,\n        email, \n        password\n    }\n\n    \n    //make a fetch call to db to login user\n    try{\n        const res = await fetch('/api/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        if(!res.ok){\n            throw res\n        }\n        \n        //grab current token\n        const token = Cookies.get('token')\n\n        //logged in user\n        const { employee } = await res.json()\n\n        dispatch(loadSession(employee, token))\n    } catch (err){\n        console.log(err)\n        //enventually will push into errors array in store\n    }\n\n}\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport * as CgIcons from 'react-icons/cg'\n\nconst SessionNavBar = () => {\n    return (\n        <div className='navbar login-navbar'>\n            <div className='navbar__logo'>\n                <CgIcons.CgTrack />\n                <p className='navbar__header login-navbar__header'>Trackerfy</p>\n            </div>\n            <div className='login-navbar__button'>\n                <div>\n                    <NavLink className='login-navbar__text' to='/login' >Login</NavLink>\n                </div>\n                <div>\n                    <NavLink className='login-navbar__text' to='/signup' >Sign Up</NavLink>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SessionNavBar","import React from 'react'\nimport * as FaIcons from 'react-icons/fa'\nimport * as CgIcons from 'react-icons/cg'\n\nconst Footer = () => {\n    return (\n        <div className='footer'>\n            <div className='trackerfy-info'>\n                <p className='footer-title'>About</p>\n                <p >This site's main purpose is to 'track' bugs/errors and tasks to be delegated to the\n                appropriate employee in product/app development. There are four main roles: Admin, Project Manager, Developer (dev), and Submitter:\n                    Admin has all access permissions (including assigning roles to new employees), Project Managers assign tickets, Submitters create tickets, and Developers manage ticket status.  </p>\n            </div>\n            <div >\n                <p className='footer-title'>Site Links</p>\n                <a href='https://github.com/qsmity/Bug-tracker'>\n                    <FaIcons.FaGithubSquare size='32px'/>\n                </a>\n\n            </div>\n            <div >\n                <p className='footer-title'>My Links</p>\n                <a href='https://github.com/qsmity'>\n                    <FaIcons.FaGithubSquare size='32px'/>\n                </a>\n                <a href='https://www.linkedin.com/in/quynn-smith-a442671bb/'>\n                    <FaIcons.FaLinkedin size='32px'/>\n                </a>\n                <a href='https://www.quynnsmith.com'>\n                    <CgIcons.CgWebsite size='32px'/>\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","import React, { useState } from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { login } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport * as mui from '@material-ui/core';\nimport SessionNavBar from './SessionNavBar';\nimport Footer from './Footer';\n\nconst LoginForm = () => {\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const updateEmail = (e) => setEmail(e.target.value)\n    const updatePassword = (e) => setPassword(e.target.value)\n\n    //handle submit\n    const loginUser = async (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <>\n            <SessionNavBar/>\n            <div className='dashboard-grid__component-login login'>\n                <div className='component__topbar'><h3>Login Here</h3></div>\n                <form className='login-form' onSubmit={loginUser}>\n                    <mui.TextField id=\"standard-basic\" label=\"Email\" onChange={updateEmail} name='email' type='email' value={email} required />\n                    <mui.TextField id=\"standard-basic\" label=\"Password\" onChange={updatePassword} name='password' type='password' value={password} required />\n                    <mui.Button variant='contained' color='primary' type='submit'>Submit</mui.Button>\n                </form>\n                <div><Link onClick={() => {\n                    setEmail('demo1@example.com')\n                    setPassword('password1')\n                }\n                } to='#'>demo_user_admin</Link></div>\n                <div><Link onClick={(e) => {\n                    setEmail('demo2@example.com')\n                    setPassword('password2')\n                }\n                } to='#'>demo_user_projectManager</Link></div>\n                <div><Link onClick={(e) => {\n                    setEmail('demo3@example.com')\n                    setPassword('password3')\n                }\n                } to='#'>demo_user_dev</Link></div>\n                <div><Link onClick={(e) => {\n                    setEmail('demo4@example.com')\n                    setPassword('password4')\n                }\n                } to='#'>demo_user_submitter</Link></div>\n            </div>\n            <Footer/>\n        </>\n    )\n}\n\n\n\nexport default LoginForm","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport * as employeeAction from '../actions/employeeAction'\nimport * as mui from '@material-ui/core';\nimport * as IoIcons from 'react-icons/io'\n\nconst EmployeeTable2 = ({ employeesArray, disabled }) => {\n    const dispatch = useDispatch()\n\n    //mapping to convert numbers roles in the db to labeled names\n    const mapRoleIdToName = (roleId) => {\n        switch (roleId) {\n            case 1:\n                return 'admin'\n            case 2:\n                return 'project manager'\n            case 3:\n                return 'dev'\n            case 4:\n                return 'submitter'\n            default:\n                return null\n\n        }\n    }\n\n    const deleteEmployee = (e) => {\n        //if disabled (no permissions) alert action is not permitted\n        if (disabled) {\n            alert('Not permitted to delete employees')\n        } else {\n            if (window.confirm('Are you sure you wish to delete this item?')) {\n                dispatch(employeeAction.deleteEmployee(e.target.id))\n            }\n            return\n        }\n        return\n    }\n\n    return (\n        <>\n            <mui.TableContainer >\n                <mui.Table>\n                    <mui.TableHead>\n                        <mui.TableRow>\n                            <mui.TableCell>Employee</mui.TableCell>\n                            <mui.TableCell style={{paddingRight: '125px'}}>Role</mui.TableCell>\n                            <mui.TableCell></mui.TableCell>\n                        </mui.TableRow>\n                    </mui.TableHead>\n                </mui.Table>\n                <div className='table-container' style={{ overflow: 'auto', height: '400px' }}>\n                    <mui.Table>\n                        <mui.TableBody>\n                            {employeesArray.map(employee => {\n                                return (\n                                    <mui.TableRow key={employee.id}>\n                                        <mui.TableCell>{employee.name}</mui.TableCell>\n                                        <mui.TableCell>{mapRoleIdToName(employee.roleId)}</mui.TableCell>\n                                        <mui.TableCell>\n                                            <IoIcons.IoIosTrash\n                                                className='delete-icon'\n                                                id={employee.id}\n                                                onClick={deleteEmployee}\n                                                size='24'>\n                                                Delete\n                                            </IoIcons.IoIosTrash>\n                                        </mui.TableCell>\n                                    </mui.TableRow>\n                                )\n                            })}\n\n                        </mui.TableBody>\n                    </mui.Table>\n                </div>\n            </mui.TableContainer>\n        </>\n    )\n\n}\n\nexport default EmployeeTable2; ","import React, { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { updateEmployeeRole } from '../actions/employeeAction'\nimport * as mui from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst EditEmployeePopup = ({ hidePopup }) => {\n    const dispatch = useDispatch()\n\n    const selectedEmployee = (e) => setSelectedEmployeeId(e.target.value)\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees)\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState(\"\")\n    const [roleToChange, setRoleToChange] = useState(\"\")\n\n    const classes = useStyles()\n\n    //handle submit \n    const addEmployee = (e) => {\n        e.preventDefault()\n        dispatch(updateEmployeeRole(selectedEmployeeId, roleToChange))\n        hidePopup()\n    }\n\n    //handle role change \n    const roleChange = (e) => {\n        setRoleToChange(e.target.value)\n    }\n\n    //handle close click\n    const close = (e) => {\n        hidePopup()\n    }\n\n    return (\n        <div className=\"edit-overlay\">\n            <div className=\"popup\">\n                <div className=\"component__topbar component__topbar--blue\"><h3>Edit Employee</h3></div>\n                <mui.Button variant=\"contained\" onClick={close} className=\"edit-employee-close\">exit</mui.Button>\n                <form className='employee-form' onSubmit={addEmployee}>\n                    {/* put each select into a seperate form control due to weird input label overlap */}\n                    <mui.FormControl variant=\"outlined\" className={classes.formControl}>\n                        <mui.InputLabel id=\"employee-name-label\">Employee</mui.InputLabel>\n                        <mui.Select labelId=\"employee-name-label\" id=\"employee-name-label\" onChange={selectedEmployee} label=\"Employee\" value={selectedEmployeeId} required>\n                            <mui.MenuItem value=\"\" key={-1}>Select Employee</mui.MenuItem>\n                            {employeesArray.map(employee => (\n                                <mui.MenuItem key={employee.id} value={employee.id}>{employee.name}</mui.MenuItem>\n\n                            ))\n                            }\n                        </mui.Select>\n                    </mui.FormControl>\n                    <mui.FormControl variant=\"outlined\" className={classes.formControl}>\n                        <mui.InputLabel id=\"employee-role-label\">Role</mui.InputLabel>\n                        <mui.Select labelId=\"employee-role-label\"\n                            onChange={roleChange}\n                            id=\"employee-role-label\"\n                            label='Role'\n                            name=\"roles\"\n                            value={roleToChange}\n                            required>\n                            <mui.MenuItem value=\"\" key={-1}>Select Role</mui.MenuItem>\n                            <mui.MenuItem value={0} key={0}>no role</mui.MenuItem>\n                            <mui.MenuItem value={1} key={1}>admin</mui.MenuItem>\n                            <mui.MenuItem value={2} key={2}>project manager</mui.MenuItem>\n                            <mui.MenuItem value={3} key={3}>dev</mui.MenuItem>\n                            <mui.MenuItem value={4} key={4}>submitter</mui.MenuItem>\n\n\n                        </mui.Select>\n                        <mui.Button variant=\"contained\" type=\"submit\">Submit</mui.Button>\n                    </mui.FormControl>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditEmployeePopup","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getEmployees } from '../actions/employeeAction'\nimport EmployeeTable2 from './EmployeeTable2'\nimport * as mui from '@material-ui/core';\nimport EditEmployeePopup from './EditEmployeePopup'\n\n\nconst Employee = ({ employeesArray, disabled }) => {\n    const dispatch = useDispatch()\n\n    //hidden state for edit employee popup\n    const [isHidden, setIsHidden] = useState(true)\n\n    //open and close modal logic\n    const hidePopup = () => {\n        if (isHidden === true) {\n            setIsHidden(false)\n        } else {\n            setIsHidden(true)\n        }\n    }\n\n    useEffect(() => {\n        dispatch(getEmployees())\n    }, [dispatch])\n\n    if (employeesArray.length > 0) {\n        return (\n            <div>\n                <mui.Button variant='contained' disabled={disabled} onClick={hidePopup} type='click'>Edit Employee</mui.Button>\n                <EmployeeTable2 employeesArray={employeesArray} disabled={disabled}/>\n                { !isHidden ? <EditEmployeePopup hidePopup={hidePopup} /> : null}\n\n            </div>\n        )\n    } else {\n        return <h1>N/A</h1>\n    }\n\n\n\n}\n\nexport default Employee;","import React, { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createProject } from '../actions/projectAction'\nimport * as mui from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst AddProjectPopup = ({ hideAddProjectPopup }) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const updateName = (e) => setName(e.target.value)\n    const updateDescription = (e) => setDescription(e.target.value)\n    //subscribing to project to force re-render after project added/edited\n    const projects = useSelector(state => state.projects)\n\n    //subscribe to the employee slice of state for the drop down\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState('')\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees) \n    const selectedEmployee = (e) => setSelectedEmployeeId(e.target.value)\n\n    // handle submit \n    const addProject = (e) => {\n        e.preventDefault()\n        dispatch(createProject(name, description, selectedEmployeeId))\n        hideAddProjectPopup()\n    }\n\n    // handle close click\n    const close = (e) => {\n        hideAddProjectPopup()\n    }\n\n    //re-render when new project added or edited\n    //is a workaround for employees not being returned properly when queried after project created\n    //add project is dispatching getAllProducts action when it should be dispatching add on project\n    useEffect( () => {\n\n    }, [projects])\n\n    return (\n        <div className=\"edit-overlay\">\n            <div className=\"popup\">\n                <div className=\"component__topbar component__topbar--blue\"><h3>Add Project</h3></div>\n                <mui.Button variant=\"contained\" onClick={close} className=\"add-proj-close-button\">exit</mui.Button>\n                <form className='add-proj-form' onSubmit={addProject}>\n                    <mui.TextField onChange={updateName} label='Name' id=\"standard-required\" value={name} required/>\n                    <mui.TextField onChange={updateDescription} rowsMax={4} label='Description' id='standard-multiline-flexible' value={description} multiline required/>\n                    <div className='add-proj-form__add-employee-dropdown'>\n                        <mui.InputLabel id=\"demo-simple-select-label\">Add Employee</mui.InputLabel>\n                        <mui.Select labelId='id=\"demo-simple-select-label\"' onChange={selectedEmployee} id='employee' value={selectedEmployeeId} required>\n                            <mui.MenuItem value='' key={-1}>Select Employee</mui.MenuItem>\n                            {employeesArray.map(employee => (\n                                <mui.MenuItem key={employee.id} value={employee.id}>{employee.name}</mui.MenuItem>\n\n                            ))\n                            }\n                        </mui.Select>\n                    </div>\n                    <div>\n                        <mui.Button variant='contained' type='submit'>Add</mui.Button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddProjectPopup","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as ProjectActions from '../actions/projectAction'\nimport * as mui from '@material-ui/core';\n\nconst EditProjectPopup = ({ hideEditProjectPopup, projectName, projectDescr, projectId, projectEmployeeId }) => {\n    const dispatch = useDispatch()\n    const [name, setName] = useState(projectName)\n\n    const [description, setDescription] = useState(projectDescr)\n    const updateDescription = (e) => setDescription(e.target.value)\n\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState(projectEmployeeId)\n    const selectedEmployee = (e) => setSelectedEmployeeId(e.target.value)\n\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees)\n    const roleId = useSelector(state => state.session.role)\n\n    //find the current employee name to populate the name field for users that don't have access to employees for the dropdown in edit projects (submitter and dev)\n    const projectsObj = useSelector(state => state.projects)\n\n    // only assign currentEmployeeName if projectId is passed in props to avoid undefined in employee dropdown (for other roles but admin)\n    let currentEmployeeName\n    if (projectId) currentEmployeeName = projectsObj[projectId].Employees[0].name\n\n    // only assign currentEmployeeid if projectId is passed in props to avoid undefined in employee dropdown (for admin role)\n    let currentEmployeeId\n    if (projectId) currentEmployeeId = projectsObj[projectId].Employees[0].id\n\n\n    //handle submit \n    const editProject = (e) => {\n        e.preventDefault()\n        dispatch(ProjectActions.editProject(name, description, selectedEmployeeId, projectId))\n        console.log('in popup', name, description, selectedEmployeeId, projectId,)\n\n        //clear inputs after submission\n        setName('')\n        setDescription('')\n\n        //close modal after submission\n        hideEditProjectPopup()\n    }\n\n    //handle close click\n    const close = (e) => {\n        hideEditProjectPopup()\n    }\n\n    // only admin can edit projects and assign employees, all other roles are view only (project manager and submitter can see all projects, dev can only see own projects)\n    if (roleId === 1) {\n        return (\n            <div className=\"edit-overlay\">\n                <div className='popup'>\n                    <div className='component__topbar component__topbar--blue'><h3>Edit Project</h3></div>\n                    <mui.Button variant='contained' onClick={close} className='edit-proj-close-button'>exit</mui.Button>\n                    <form onSubmit={editProject} className='edit-proj-popup-form'>\n\n                        <mui.TextField disabled id=\"standard-required\" label='Name' defaultValue={name} />\n                        <mui.TextField onChange={updateDescription} rowsMax={4} label='description' id='standard-multiline-flexible' value={description} multiline required />\n\n                        <mui.InputLabel id=\"demo-simple-select-label\">Add/Edit Employee</mui.InputLabel>\n                        <mui.Select labelId='demo-simple-select-label' onChange={selectedEmployee} id='employee' defaultValue={currentEmployeeId ? currentEmployeeId : ''} value={selectedEmployeeId}>\n                            <mui.MenuItem value='' key={-1}>Select Employee</mui.MenuItem>\n                            {/* must hard code in demo employees since they aren't returned from db to protect them from being deleted by an admin */}\n                            <mui.MenuItem key={1} value={1}>demo_user_admin</mui.MenuItem>\n                            <mui.MenuItem key={2} value={2}>demo_user_projectManager</mui.MenuItem>\n                            <mui.MenuItem key={3} value={3}>demo_user_dev</mui.MenuItem>\n                            <mui.MenuItem key={4} value={4}>demo_user_submitter</mui.MenuItem>\n                            {/* populate the other non demo user employees */}\n                            {employeesArray.map(employee => (\n                                <mui.MenuItem key={employee.id} value={employee.id}>{employee.name}</mui.MenuItem>\n                            ))\n                            }\n                        </mui.Select>\n\n                        <mui.Button variant='contained' type='submit'>Add/Edit</mui.Button>\n                    </form>\n                </div>\n            </div>\n        )\n\n        // read only for other roles\n    } else {\n        return (\n            <div className=\"edit-overlay\">\n                <div className='popup'>\n                    <div className='component__topbar component__topbar--blue'><h3>Edit Ticket</h3></div>\n                    <mui.Button variant='contained' onClick={close} className='edit-proj-close-button'>exit</mui.Button>\n                    <form className='vedit-proj-popup-form'>\n\n                        <mui.TextField disabled id=\"standard-required\" label='Name' defaultValue={name} />\n                        <mui.TextField rowsMax={4} disabled label='Description' id='standard-multiline-flexible' value={description} multiline />\n                        <mui.TextField disabled id=\"standard-required\" label='Employee' value={currentEmployeeName} />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EditProjectPopup","import React, { useEffect } from 'react'\nimport * as mui from '@material-ui/core';\nimport * as FiIcons from 'react-icons/fi'\nimport * as IoIcons from 'react-icons/io'\nimport * as ProjectActions from '../actions/projectAction'\nimport { useDispatch } from 'react-redux'\n\nconst ProjectTable = ({ projectsArray, projects, disabled, hideEditProjectPopup }) => {\n    const dispatch = useDispatch()\n\n    //re-render if ticket edited to show changes\n    useEffect(() => {\n\n    }, [projects])\n\n    //handle edit click\n    const editProject = (e) => {\n        hideEditProjectPopup(e.currentTarget.dataset.name,\n            e.currentTarget.dataset.descr,\n            e.currentTarget.dataset.employeeid,\n            e.currentTarget.id,\n        )\n    }\n\n    const deleteProject = (e) => {\n        //if disabled is true, don't allow unauthorized user to delete ticket\n        if (disabled) {\n            alert('Not permitted to delete tickets')\n        } else {\n            //popup window confirming delete action is valid\n            if (window.confirm('Are you sure you wish to delete this item?')) {\n                dispatch(ProjectActions.deleteProject(e.currentTarget.id))\n            }\n            return\n        }\n        return\n    }\n\n    return (\n        <>\n            <mui.TableContainer >\n                <mui.Table className='project-table-container'>\n                    <mui.TableHead>\n                        <mui.TableRow>\n                            <mui.TableCell align='left'>Project</mui.TableCell>\n                            <mui.TableCell align='right'>Description</mui.TableCell>\n                            <mui.TableCell align='center' style={{ paddingLeft: '260px' }}>Assigned Employees</mui.TableCell>\n                            <mui.TableCell align='right'></mui.TableCell>\n                            <mui.TableCell align='right'></mui.TableCell>\n                        </mui.TableRow>\n                    </mui.TableHead>\n                </mui.Table>\n                <div className='table-container' style={{ overflow: 'auto', height: '500px' }}>\n                    <mui.Table >\n                        <mui.TableBody>\n                            {projectsArray.map(project => {\n                                return (\n                                    <mui.TableRow key={project.id}>\n                                        <mui.TableCell>{project.name}</mui.TableCell>\n                                        <mui.TableCell>{project.description}</mui.TableCell>\n                                        <mui.TableCell>\n                                            <ul>\n                                                {project.Employees ? project.Employees.map(employee => {\n                                                    return <li key={employee.id}>\n                                                        {employee.name}\n                                                    </li>\n                                                }\n                                                ) : ''\n                                                }\n\n                                            </ul>\n                                        </mui.TableCell>\n                                        <mui.TableCell>\n                                            <FiIcons.FiEdit2\n                                                className='edit-icon'\n                                                disabled={disabled}\n                                                onClick={editProject}\n                                                id={project.id}\n                                                data-name={project.name}\n                                                data-descr={project.description}\n                                                data-employeeid={project.employeeId}\n                                                disabled={disabled} />\n\n                                        </mui.TableCell>\n                                        <mui.TableCell>\n                                            <IoIcons.IoIosTrash\n                                                className='delete-icon'\n                                                id={project.id}\n                                                disabled={disabled}\n                                                onClick={deleteProject}\n                                                size='24'>\n                                                Delete\n                                            </IoIcons.IoIosTrash>\n                                        </mui.TableCell>\n                                    </mui.TableRow>)\n                            })}\n\n                        </mui.TableBody>\n                    </mui.Table>\n                </div>\n\n            </mui.TableContainer>\n        </>\n    )\n}\n\nexport default ProjectTable; ","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProjects } from '../actions/projectAction'\nimport AddProjectPopup from './AddProjectPopup'\nimport EditProjectPopup from './EditProjectPopup'\nimport ProjectTable from './ProjectTable'\nimport * as mui from '@material-ui/core';\n\n\n\nconst Project = ({ disabled }) => {\n    const dispatch = useDispatch()\n    const projects = useSelector(state => state.projects)\n    const projectsArray = Object.values(projects)\n    const [isAddProjectHidden, setIsAddProjectHidden] = useState(true)\n    const [isEditProjectHidden, setIsEditProjectHidden] = useState(true)\n\n     //grab project name and description for edit button popup\n     const [projectName, setProjectName] = useState('')\n     const [projectDescr, setProjectDescr] = useState('')\n     const [projectId, setProjectId] = useState('')\n     const [projectEmployeeId, setProjectEmployeeId] = useState('')\n\n\n    useEffect(() => {\n        dispatch(getProjects())\n    }, [dispatch])\n\n    //open and close add project modal logic\n    const hideAddProjectPopup = () => {\n        if (isAddProjectHidden === true) {\n            setIsAddProjectHidden(false)\n        } else {\n            setIsAddProjectHidden(true)\n        }\n    }\n\n    //open and close edit project modal logic\n    //edit button will pass necessary project info nested in the edit button dataset attribute, onclick\n    const hideEditProjectPopup = (projectNamePopup, projectDescrPopup, projectEmployeeIdPopup, projectId) => {\n        if (isEditProjectHidden === true) {\n            setIsEditProjectHidden(false)\n            setProjectName(projectNamePopup)\n            setProjectDescr(projectDescrPopup)\n            setProjectId(projectId)\n            setProjectEmployeeId(projectEmployeeIdPopup)\n        } else {\n            setIsEditProjectHidden(true)\n        }\n    }\n\n    if (projectsArray.length > 0) {\n        return (\n            <div>\n                <mui.Button variant='contained' disabled={disabled} onClick={hideAddProjectPopup}>add project</mui.Button>\n\n                { !isAddProjectHidden ? <AddProjectPopup hideAddProjectPopup={hideAddProjectPopup} /> : null}\n\n                { !isEditProjectHidden ?\n                    <EditProjectPopup\n                        projectId={projectId}\n                        projectName={projectName}\n                        projectDescr={projectDescr}\n                        projectEmployeeId={projectEmployeeId}\n                        hideEditProjectPopup={hideEditProjectPopup} /> : null}\n\n                <ProjectTable disabled={disabled} projectsArray={projectsArray} projects={projects} hideEditProjectPopup={hideEditProjectPopup} />\n            </div>\n        )\n    } else {\n        return <h1 className='not-found'>No Projects Found</h1>\n    }\n}\n\nexport default Project; ","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editTicket } from '../actions/ticketAction'\nimport * as mui from '@material-ui/core';\n\nconst EditTicketPopup = ({ hideEditTicketPopup, ticketName, ticketDescr, ticketId, ticketSevLvl, ticketEmployeeId, ticketStatus }) => {\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(ticketName)\n\n    const [description, setDescription] = useState(ticketDescr)\n    const updateDescription = (e) => setDescription(e.target.value)\n\n    const [severityLevel, setSeverityLevel] = useState(ticketSevLvl)\n    const updateSeverityLevel = (e) => setSeverityLevel(e.target.value)\n\n    const [status, setStatus] = useState(ticketStatus)\n    const updateStatus = (e) => setStatus(e.target.value)\n\n    const [type, setType] = useState('bug/error')\n    const updateType = (e) => setType(e.target.value)\n\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState(ticketEmployeeId)\n    const selectedEmployee = (e) => setSelectedEmployeeId(e.target.value)\n\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees)\n    const roleId = useSelector(state => state.session.role)\n\n    //find the current employee name to populate the name field for users that don't have access to employees for the dropdown in edit tickets (submitter and dev)\n    const ticketsObj = useSelector(state => state.tickets)\n    const currentEmployeeName = ticketsObj[ticketId].Employee\n\n    //handle submit \n    const addTicket = (e) => {\n        e.preventDefault()\n        dispatch(editTicket(name, description, severityLevel, status, type, selectedEmployeeId, ticketId))\n        console.log('in popup', name, description, severityLevel, status, type, ticketId, selectedEmployeeId)\n        setName('')\n        setDescription('')\n        hideEditTicketPopup()\n    }\n\n    //handle close click\n    const close = (e) => {\n        hideEditTicketPopup()\n    }\n\n    // if user is project manager only allow to edit employee and severity level\n    if (roleId === 2) {\n        return (\n            <div className=\"edit-overlay\">\n                <div className='popup'>\n                    <div className='component__topbar component__topbar--blue'><h3>Edit Ticket</h3></div>\n                    <form onSubmit={addTicket} className='popup__form'>\n                        <mui.Button variant='contained' onClick={close} className='edit-ticket-close'>exit</mui.Button>\n                        <mui.TextField disabled id=\"standard-required\" label='Name' defaultValue={ticketName} />\n                        <mui.TextField rowsMax={4} disabled label='Description' id='standard-multiline-flexible' value={description} multiline />\n                        <mui.TextField rowsMax={4} disabled label='Status' id='standard-multiline-flexible' value={status} />\n                        <mui.TextField disabled id=\"standard-required\" label='type' defaultValue={type} />\n\n                        <mui.InputLabel id=\"demo-simple-select-label\">Severity Level</mui.InputLabel>\n                        <mui.Select labelId=\"demo-simple-select-label\" id='severityLevel' onChange={updateSeverityLevel} value={severityLevel}>\n                            <mui.MenuItem value='low'>Low</mui.MenuItem>\n                            <mui.MenuItem value='medium'>Medium</mui.MenuItem>\n                            <mui.MenuItem value='high'>High</mui.MenuItem>\n                        </mui.Select >\n\n                        <mui.InputLabel id=\"demo-simple-select-label\">Add/Edit Employee</mui.InputLabel>\n                        <mui.Select labelId='demo-simple-select-label' onChange={selectedEmployee} id='employee' defaultValue={`${selectedEmployeeId}`} value={`${selectedEmployeeId}`} required>\n                            <mui.MenuItem value='' key={-1}>Select Employee</mui.MenuItem>\n                            {/* must hard code in demo employees since that aren't returned from db to protect them from being delete by an admin */}\n                            <mui.MenuItem key={1} value={1}>demo_user_admin</mui.MenuItem>\n                            <mui.MenuItem key={2} value={2}>demo_user_projectManager</mui.MenuItem>\n                            <mui.MenuItem key={3} value={3}>demo_user_dev</mui.MenuItem>\n                            <mui.MenuItem key={4} value={4}>demo_user_submitter</mui.MenuItem>\n                            {/* populate the other non demo user employees */}\n                            {employeesArray.map(employee => (\n                                <mui.MenuItem key={employee.id} value={employee.id}>{employee.name}</mui.MenuItem>\n\n                            ))\n                            }\n                        </mui.Select>\n\n                        <mui.Button variant='contained' type='submit'>Add</mui.Button>\n                    </form>\n                </div>\n            </div>\n        )\n\n        // if user is submitter no editing allowed, just read only\n    } else if (roleId === 4) {\n        return (\n            <div className=\"edit-overlay\">\n                <div className='popup'>\n                    <div className='component__topbar component__topbar--blue'><h3>Edit Ticket</h3></div>\n                    <form onSubmit={addTicket} className='popup__form'>\n                        <mui.Button variant='contained' onClick={close} className='edit-ticket-close'>exit</mui.Button>\n\n                        <mui.TextField disabled id=\"standard-required\" label='Name' defaultValue={ticketName} />\n                        <mui.TextField rowsMax={4} disabled label='Description' id='standard-multiline-flexible' value={description} multiline />\n                        <mui.TextField rowsMax={4} disabled label='Status' id='standard-multiline-flexible' value={status} />\n                        <mui.TextField disabled id=\"standard-required\" label='type' defaultValue={type} />\n                        <mui.TextField disabled id=\"standard-required\" label='Severity Level' defaultValue={type} />\n                        <mui.TextField disabled id=\"standard-required\" label='Employee' defaultValue={currentEmployeeName} />\n                    </form>\n                </div>\n            </div>\n        )\n\n        // if dev only edit status \n    } else if (roleId === 3) {\n        return (\n            <div className=\"edit-overlay\">\n                <div className='popup'>\n                    <div className='component__topbar component__topbar--blue'><h3>Edit Ticket</h3></div>\n                    <form onSubmit={addTicket} className='popup__form'>\n                        <mui.Button variant='contained' onClick={close} className='edit-ticket-close'>exit</mui.Button>\n\n                        <mui.TextField disabled id=\"standard-required\" label='Name' defaultValue={ticketName} />\n                        <mui.TextField rowsMax={4} disabled label='Description' id='standard-multiline-flexible' value={description} multiline />\n                        <mui.TextField rowsMax={4} disabled label='Status' id='standard-multiline-flexible' value={status} />\n                        <mui.TextField disabled id=\"standard-required\" label='type' defaultValue={type} />\n                        <mui.TextField disabled id=\"standard-required\" label='Employee' defaultValue={currentEmployeeName} />\n\n                        <mui.InputLabel id=\"demo-simple-select-label\">Status</mui.InputLabel>\n                        <mui.Select labelId=\"demo-simple-select-label\" id='status' onChange={updateStatus} value={status}>\n                            <mui.MenuItem value='work in progress'>Work In Progress</mui.MenuItem>\n                            <mui.MenuItem value='completed'>Completed</mui.MenuItem>\n                        </mui.Select>\n\n                        <mui.Button variant='contained' type='submit'>Add</mui.Button>\n                    </form>\n                </div>\n            </div>\n        )\n\n        //if admin, edit all fields on ticket\n    } else {\n        return (\n            <div className=\"edit-overlay\">\n                <div className='popup'>\n                    <div className='component__topbar component__topbar--blue'><h3>Edit Ticket</h3></div>\n                    <form onSubmit={addTicket} className='popup__form'>\n                        <mui.Button variant='contained' onClick={close} className='edit-ticket-close'>exit</mui.Button>\n                        <mui.TextField disabled id=\"standard-required\" label='Name' defaultValue={ticketName} />\n                        <mui.TextField onChange={updateDescription} rowsMax={4} disabled label='description' id='standard-multiline-flexible' value={description} multiline />\n\n                        <mui.InputLabel id=\"demo-simple-select-label\">Severity Level</mui.InputLabel>\n                        <mui.Select labelId=\"demo-simple-select-label\" id='severityLevel' onChange={updateSeverityLevel} value={severityLevel}>\n                            <mui.MenuItem value='low'>Low</mui.MenuItem>\n                            <mui.MenuItem value='medium'>Medium</mui.MenuItem>\n                            <mui.MenuItem value='high'>High</mui.MenuItem>\n                        </mui.Select >\n\n                        <mui.InputLabel id=\"demo-simple-select-label\">Status</mui.InputLabel>\n                        <mui.Select labelId=\"demo-simple-select-label\" id='status' onChange={updateStatus} value={status}>\n                            <mui.MenuItem value='work in progress'>Work In Progress</mui.MenuItem>\n                            <mui.MenuItem value='completed'>Completed</mui.MenuItem>\n                        </mui.Select>\n\n                        <mui.InputLabel id=\"demo-simple-select-label\">Type</mui.InputLabel>\n                        <mui.Select labelId='demo-simple-select-label' id='type' onChange={updateType} value={type}>\n                            <mui.MenuItem value='bug/error'>Bug/Error</mui.MenuItem>\n                            <mui.MenuItem value='task'>Task</mui.MenuItem>\n                        </mui.Select>\n\n                        <mui.InputLabel id=\"demo-simple-select-label\">Add/Edit Employee</mui.InputLabel>\n                        <mui.Select labelId='demo-simple-select-label' onChange={selectedEmployee} id='employee' defaultValue={`${selectedEmployeeId}`} value={`${selectedEmployeeId}`} required>\n                            <mui.MenuItem value='' key={-1}>Select Employee</mui.MenuItem>\n                            {/* must hard code in demo employees since that aren't returned from db to protect them from being delete by an admin */}\n                            <mui.MenuItem key={1} value={1}>demo_user_admin</mui.MenuItem>\n                            <mui.MenuItem key={2} value={2}>demo_user_projectManager</mui.MenuItem>\n                            <mui.MenuItem key={3} value={3}>demo_user_dev</mui.MenuItem>\n                            <mui.MenuItem key={4} value={4}>demo_user_submitter</mui.MenuItem>\n                            {/* populate the other non demo user employees */}\n                            {employeesArray.map(employee => (\n                                <mui.MenuItem key={employee.id} value={employee.id}>{employee.name}</mui.MenuItem>\n\n                            ))\n                            }\n\n                        </mui.Select>\n\n                        <mui.Button variant='contained' type='submit'>Add</mui.Button>\n                    </form>\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\nexport default EditTicketPopup","import React, { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createTicket } from '../actions/ticketAction'\nimport * as mui from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst AddTicketPopup = ({ hideAddTicketPopup, projectsArray }) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState('')\n    const updateName = (e) => setName(e.target.value)\n\n    const [description, setDescription] = useState('')\n    const updateDescription = (e) => setDescription(e.target.value)\n\n    const [severityLevel, setSeverityLevel] = useState('')\n    const updateSeverityLevel = (e) => setSeverityLevel(e.target.value)\n\n    const [status, setStatus] = useState('')\n    const updateStatus = (e) => setStatus(e.target.value)\n\n    const [type, setType] = useState('bug/error')\n    const updateType = (e) => setType(e.target.value)\n\n    const [selectedProjectId, setSelectedProjectId] = useState('')\n    const updateSelectedProject = (e) => setSelectedProjectId(e.target.value)\n\n    // handle submit \n    const addTicket = (e) => {\n        e.preventDefault()\n        dispatch(createTicket(name, description, severityLevel, status, type, selectedProjectId))\n        hideAddTicketPopup()\n    }\n\n    // handle close click\n    const close = (e) => {\n        hideAddTicketPopup()\n    }\n\n    return (\n        <div className=\"edit-overlay\">\n            <div className=\"popup\">\n                <div className=\"component__topbar component__topbar--blue\"><h3>Add Ticket</h3></div>\n                <mui.Button variant=\"contained\" onClick={close} className=\"add-ticket-close-button\">exit</mui.Button>\n                <form onSubmit={addTicket} className='add-ticket-popup-form'>\n                    <mui.TextField onChange={updateName} id=\"standard-required\" label='Name' value={name} required />\n                    <mui.TextField onChange={updateDescription} rowsMax={4} label='description' id='standard-multiline-flexible' value={description} multiline required />\n\n                    <mui.InputLabel id=\"demo-simple-select-label\">Severity Level</mui.InputLabel>\n                    <mui.Select labelId=\"demo-simple-select-label\" id='severityLevel' onChange={updateSeverityLevel} value={severityLevel} required>\n                        <mui.MenuItem value='low'>Low</mui.MenuItem>\n                        <mui.MenuItem value='medium'>Medium</mui.MenuItem>\n                        <mui.MenuItem value='high'>High</mui.MenuItem>\n                    </mui.Select >\n\n                    <mui.InputLabel id=\"demo-simple-select-label\">Status</mui.InputLabel>\n                    <mui.Select labelId=\"demo-simple-select-label\" id='status' onChange={updateStatus} value={status} required>\n                        <mui.MenuItem value='work in progress'>Work In Progress</mui.MenuItem>\n                        <mui.MenuItem value='completed'>Completed</mui.MenuItem>\n                    </mui.Select>\n\n                    <mui.InputLabel id=\"demo-simple-select-label\">Type</mui.InputLabel>\n                    <mui.Select labelId='demo-simple-select-label' id='type' onChange={updateType} value={type} required>\n                        <mui.MenuItem value='bug/error'>Bug/Error</mui.MenuItem>\n                        <mui.MenuItem value='task'>Task</mui.MenuItem>\n                    </mui.Select>\n\n                    <mui.InputLabel id=\"demo-simple-select-label\">Assign to Project</mui.InputLabel>\n                    <mui.Select labelId='demo-simple-select-label' onChange={updateSelectedProject} id='project' value={selectedProjectId} required>\n                        <mui.MenuItem value='' key={-1}>Select Project</mui.MenuItem>\n                        {projectsArray ? projectsArray.map(project => (\n                            <mui.MenuItem key={project.id} value={project.id}>{project.name}</mui.MenuItem>\n                        ))\n                        : null\n                        }\n                    </mui.Select>\n                    <mui.Button variant='contained' type='submit'>Add</mui.Button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddTicketPopup","import React, { useEffect } from 'react'\nimport * as mui from '@material-ui/core';\nimport * as FiIcons from 'react-icons/fi'\nimport * as IoIcons from 'react-icons/io'\nimport * as TicketActions from '../actions/ticketAction'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst TicketTable = ({ ticketsArray, disabled, hideEditTicketPopup }) => {\n    const dispatch = useDispatch()\n\n    const roleId = useSelector(state => state.session.role)\n\n    //handle edit click\n    const editTicket = (e) => {\n        console.log(e.currentTarget)\n        hideEditTicketPopup(e.currentTarget.dataset.name,\n            e.currentTarget.dataset.descr,\n            e.currentTarget.id,\n            e.currentTarget.dataset.severitylevel,\n            e.currentTarget.dataset.status,\n            e.currentTarget.dataset.employeeid)\n    }\n\n    //re-render if ticket edited to show changes\n    useEffect(() => {\n\n    }, [ticketsArray])\n\n    const deleteTicket = (e) => {\n        //if disabled is true, don't allow unauthorized user to delete ticket\n        if (disabled) {\n            alert('Not permitted to delete tickets')\n        } else {\n            //popup window confirming delete action is valid\n            if (window.confirm('Are you sure you wish to delete this item?')) {\n                dispatch(TicketActions.deleteTicket(e.currentTarget.id))\n            }\n            return\n        }\n        return\n    }\n\n    return (\n        <>\n            <mui.TableContainer>\n                <mui.Table>\n                    <mui.TableHead>\n                        <mui.TableRow>\n                            <mui.TableCell>Name</mui.TableCell>\n                            <mui.TableCell align='center' style={{paddingLeft: '50px', paddingRight: '0'}}>Description</mui.TableCell>\n                            <mui.TableCell align='right' style={{paddingLeft: '15px', paddingRight: '0'}}>Severity Level</mui.TableCell>\n                            <mui.TableCell align='center' style={{paddingRight: '0'}}>Status</mui.TableCell>\n                            <mui.TableCell align='center'>Assigned Empoyee</mui.TableCell>\n                            <mui.TableCell></mui.TableCell>\n                            <mui.TableCell></mui.TableCell>\n                        </mui.TableRow>\n                    </mui.TableHead>\n                </mui.Table>\n                <div className='table-container' style={{ overflow: 'auto', height: '400px' }}>\n                    <mui.Table>\n                        <mui.TableBody>\n                            {ticketsArray.map(ticket => {\n                                return (\n                                    <mui.TableRow key={ticket.id}>\n                                        <mui.TableCell style={{maxWidth: '75px'}}>{ticket.name}</mui.TableCell>\n                                        <mui.TableCell style={{maxWidth: '150px'}}>{ticket.description}</mui.TableCell>\n                                        <mui.TableCell>{ticket.severityLevel}</mui.TableCell>\n                                        <mui.TableCell>{ticket.status}</mui.TableCell>\n                                        <mui.TableCell>{ticket.Employee}</mui.TableCell>\n                                        {/* adding the dataset onto the div to populate the modal with selected ticket to edit */}\n                                        <mui.TableCell>\n                                            <div className='edit-icon-container' onClick={editTicket}\n                                                id={ticket.id}\n                                                data-name={ticket.name}\n                                                data-descr={ticket.description}\n                                                data-severitylevel={ticket.severityLevel}\n                                                data-status={ticket.status}\n                                                data-employeeid={ticket.employeeId}\n                                                disabled={disabled}\n                                            >\n                                                <FiIcons.FiEdit2\n                                                    className='edit-icon'\n                                                />\n                                            </div>\n                                        </mui.TableCell>\n                                        <mui.TableCell>\n                                            {\n                                                roleId !== 1 && roleId !== 2 ?\n                                                    <IoIcons.IoIosTrash\n                                                        className='delete-icon'\n                                                        id={ticket.id}\n                                                        disabled={true}\n                                                        onClick={deleteTicket}\n                                                        size='24'>\n                                                        Delete\n                                            </IoIcons.IoIosTrash>\n                                                    :\n                                                    <IoIcons.IoIosTrash\n                                                        className='delete-icon'\n                                                        id={ticket.id}\n                                                        disabled={disabled}\n                                                        onClick={deleteTicket}\n                                                        size='24'>\n                                                        Delete\n                                            </IoIcons.IoIosTrash>\n\n                                            }\n                                        </mui.TableCell>\n\n                                    </mui.TableRow>\n                                )\n                            })}\n\n                        </mui.TableBody>\n                    </mui.Table>\n                </div>\n            </mui.TableContainer>\n        </>\n    )\n}\n\nexport default TicketTable; ","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getTickets } from '../actions/ticketAction'\nimport EditTicketPopup from './EditTicketPopup'\nimport AddTicketPopup from './AddTicketPopup'\nimport TicketTable from './TicketTable'\nimport * as mui from '@material-ui/core';\n\nconst Ticket = ({ disabled, currentEmployeeRole }) => {\n    const dispatch = useDispatch()\n    const tickets = useSelector(state => state.tickets)\n    const ticketsArray = Object.values(tickets)\n    const projects = useSelector(state => state.projects)\n    const projectsArray = Object.values(projects)\n\n    //grab ticket name and description for edit button popup\n    const [ticketName, setTicketName] = useState('')\n    const [ticketDescr, setTicketDescr] = useState('')\n    const [ticketId, setTicketId] = useState('')\n    const [ticketSeverityLevel, setTicketSeverityLevel] = useState('')\n    const [ticketStatus, setTicketStatus] = useState('')\n    const [ticketEmployeeId, setTicketEmployeeId] = useState('')\n\n    //hidden state for edit ticket popup\n    const [isEditTicketHidden, setIsEditTicketHidden] = useState(true)\n\n    //hidden state for add ticket popup\n    const [isAddTicketHidden, setIsAddTicketHidden] = useState(true)\n\n    //edit button will pass necessary ticket info nested in the edit button dataset attribute, onclick\n    const hideEditTicketPopup = (ticketNamePopup, ticketDescrPopup, ticketId, ticketSevLvlPopup, ticketStatusPopup, ticketEmployeeIdPopup) => {\n\n        if (isEditTicketHidden === true) {\n            setIsEditTicketHidden(false)\n            setTicketName(ticketNamePopup)\n            setTicketDescr(ticketDescrPopup)\n            setTicketId(ticketId)\n            setTicketSeverityLevel(ticketSevLvlPopup)\n            setTicketStatus(ticketStatusPopup)\n            setTicketEmployeeId(ticketEmployeeIdPopup)\n        } else {\n            setIsEditTicketHidden(true)\n        }\n\n    }\n\n    //open and close add ticket popup logic\n    const hideAddTicketPopup = () => {\n        if (isAddTicketHidden === true) {\n            setIsAddTicketHidden(false)\n        } else {\n            setIsAddTicketHidden(true)\n        }\n\n    }\n\n    useEffect(() => {\n        dispatch(getTickets())\n    }, [])\n\n    if (ticketsArray.length > 0) {\n        return (\n            <div className='ticket'>\n                <div>\n                    {/* if user is submitter or admin permit to add ticket (remove disabled boolean) */}\n                    {currentEmployeeRole === 4 || currentEmployeeRole === 1 ?\n                        <mui.Button variant='contained' onClick={hideAddTicketPopup}>Add Ticket</mui.Button>\n                        :\n                        <mui.Button variant='contained' disabled={disabled} type='click'>Add Ticket</mui.Button>\n                    }\n                    <TicketTable hideEditTicketPopup={hideEditTicketPopup} disabled={disabled} ticketsArray={ticketsArray} />\n                </div>\n\n                { !isEditTicketHidden ? <EditTicketPopup\n                    ticketId={ticketId}\n                    ticketName={ticketName}\n                    ticketDescr={ticketDescr}\n                    ticketSevLvl={ticketSeverityLevel}\n                    ticketEmployeeId={ticketEmployeeId}\n                    ticketStatus={ticketStatus}\n                    hideEditTicketPopup={hideEditTicketPopup} /> : null}\n\n                { !isAddTicketHidden ? <AddTicketPopup projectsArray={projectsArray} hideAddTicketPopup={hideAddTicketPopup} /> : null}\n            </div>\n        )\n    } else {\n        return <h1 className='not-found'>No Tickets Available</h1>\n    }\n\n}\n\nexport default Ticket; ","import React from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { logout } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\nimport * as mui from '@material-ui/core';\n\n\nconst LogoutButton = () => {\n    const dispatch = useDispatch()\n\n    //handle click\n    const logoutUser = async (e) => {\n        dispatch(logout())\n    }\n\n    return (\n        <div>\n            <mui.Button variant='contained' color='primary' onClick={logoutUser} type='submit'>Logout</mui.Button>\n        </div>\n    )\n}\n\nexport default LogoutButton; ","import React from 'react'\nimport LogoutButton from '../components/LogoutButton'\nimport * as CgIcons from 'react-icons/cg'\n\n\n\nfunction Navbar({ currentEmployee }) {\n    return (\n        <>\n            <div className='navbar'>\n                <div>\n                    <p>Signed in as {currentEmployee.name}\n                    </p>\n                </div>\n                <div className='navbar__logo'>\n                    <CgIcons.CgTrack className='logo-target'/>\n                    <p>Trackerfy</p>\n                </div>\n                <div className='navbar__logout'>\n                    <LogoutButton />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Navbar\n","import React, {useState, useEffect} from 'react'\nimport Employee from '../components/Employee'\nimport Project from '../components/Project'\nimport Ticket from '../components/Ticket'\nimport { useSelector } from 'react-redux'\nimport Navbar from '../components/Navbar'\n\n\nconst Dashboard = () => {\n    const currentEmployee = useSelector(state => state.session)\n    const currentEmployeeRole = currentEmployee.role\n\n    const employees = useSelector(state => state.employees)\n    const employeesArray = Object.values(employees)\n\n\n\n    const [disabled, setDisabled] = useState(false)\n\n    //checks user role. if not admin disabled will be true\n    //this allows to disabled all delete buttons for non admin roles\n    useEffect(()=> {\n        if(currentEmployeeRole !== 1){\n            setDisabled(true)\n        } else {\n            setDisabled(false)\n        }\n    }, [currentEmployeeRole])\n\n    return (\n        <>\n        <nav>\n          <Navbar currentEmployee={currentEmployee}/>\n        </nav>\n        <div>\n            {!currentEmployeeRole? <h2 className='not-found to-be-assigned-message'>** Wait To Be Assigned Role **</h2> : null}\n        </div>\n        <div className='dashboard-grid'>\n            <div className={employeesArray.length <= 0 ? 'dashboard-grid__component-employee dashboard-grid__component--hidden' : 'dashboard-grid__component-employee'}>\n                <div className='component__topbar'><h3>Employees</h3></div>\n                <Employee employeesArray={employeesArray} disabled={disabled}/>\n            </div>\n            <div className='dashboard-grid__component-project'>\n                <div className='component__topbar'><h3>Projects</h3></div>\n                <Project disabled={disabled}/>\n            </div>\n            <div className='dashboard-grid__component-ticket'>\n                <div className='component__topbar'><h3>Tickets</h3></div>\n                <Ticket disabled={disabled} currentEmployeeRole={currentEmployeeRole}/>\n            </div>\n        </div>\n    </>\n    )\n}\n\nexport default Dashboard; ","import React, { useState } from 'react'\n//not using HOC container so don't need to import * from sessionAction to avoid namespce collision\nimport { signup } from '../actions/sessionAction'\nimport { useDispatch } from 'react-redux';\nimport * as mui from '@material-ui/core';\nimport SessionNavBar from './SessionNavBar';\nimport Footer from './Footer';\n\n\n\n\nconst SignupForm = () => {\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const updateName = (e) => setName(e.target.value)\n    const updateEmail = (e) => setEmail(e.target.value)\n    const updatePassword = (e) => setPassword(e.target.value)\n\n    //handle submit\n    const signupUser = async (e) => {\n        e.preventDefault()\n        dispatch(signup(name, email, password))\n    }\n\n    return (\n        <>\n            <SessionNavBar/>\n            <div className='dashboard-grid__component-login login'>\n                <div className='component__topbar'><h3>Sign Up here</h3></div>\n                <form className='login-form' onSubmit={signupUser}>\n                    <mui.TextField id=\"standard-basic\" label=\"Name\" onChange={updateName} name='name' type='name' value={name} required />\n                    <mui.TextField id=\"standard-basic\" label=\"Email\" onChange={updateEmail} name='email' type='email' value={email} required />\n                    <mui.TextField id=\"standard-basic\" label=\"Password\" onChange={updatePassword} name='password' type='password' value={password} required />\n                    <mui.Button variant='contained' color='primary' type='submit'>Sign Up</mui.Button>\n                </form>\n            </div>\n            <Footer/>\n        </>\n    )\n}\n\n\n\nexport default SignupForm; ","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport LoginForm from './session/LoginForm'\nimport Dashboard from './pages/Dashboard'\nimport { useSelector } from 'react-redux';\nimport SignupForm from './session/SignupForm';\n\n//rest encapsulates path and exact being passed down\n//redirect user if not logged in\nconst ProtectedRoute = ({ component: Component, token, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={ (props) => token ? <Component {...props} /> : <Redirect to='/login'/> }\n    />\n  )\n}\n//if user is logged in, redirect user back to dashboard\nconst AuthRoute = ({ component: Component, token, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={ (props) => token ? <Redirect to='/admin/dashboard'/> : <Component {...props} /> }\n    />\n  )\n}\n\nfunction App({token}) {\n  return (\n    <>\n    <BrowserRouter>\n        <Switch>\n          <ProtectedRoute token={token} exact path='/admin/dashboard' component={Dashboard} />\n          <AuthRoute exact token={token} path='/login' component={LoginForm} />\n          <AuthRoute token={token} path='/signup' component={SignupForm}/>\n          <AuthRoute token={token} path='/' component={LoginForm}/>\n        </Switch>\n    </BrowserRouter>\n    </>\n  );\n}\n\nconst AppContainer = () => {\n  const token = useSelector( state => state.session.authToken )\n  return <App token={token}/>\n  \n}\n\nexport default AppContainer;\n","import {\nLOAD_EMPLOYEES, \nREMOVE_EMPLOYEES,\nREMOVE_ONE_EMPLOYEE\n} from '../actions/employeeAction'\n\n\n//reducer\nconst employeeReducer = (state = {}, action) => {\n    let nextState;\n    switch(action.type){\n        case LOAD_EMPLOYEES: \n            nextState = {}\n            action.employees.map( employee => {\n               return nextState[employee.id] = employee\n            })\n            return nextState\n        case REMOVE_EMPLOYEES: \n            return {}\n        case REMOVE_ONE_EMPLOYEE: \n            nextState = Object.assign({}, {...state})\n            delete nextState[action.employeeId]\n            return nextState\n        default: \n            return state\n    }\n}\n\nexport default employeeReducer\n\n","import {\n    LOAD_SESSION, \n    REMOVE_SESSION\n    } from '../actions/sessionAction'\n    \n    \n    //reducer\n    const sessionReducer = (state = {}, action) => {\n        switch(action.type){\n            case LOAD_SESSION: \n                return Object.assign({}, { currentUserId: action.user.id, role: action.user.roleId, authToken: action.token, name: action.user.name , email: action.user.email })\n            case REMOVE_SESSION: \n                return {}\n            default: \n                return state\n        }\n    }\n    \n    export default sessionReducer","import {\n    ADD_PROJECT,\n    LOAD_PROJECTS,\n    REMOVE_ONE_PROJECT,\n    REMOVE_PROJECTS,\n    UPDATE_PROJECT,\n\n} from '../actions/projectAction'\n\n\n//reducer\nconst projectReducer = (state = {}, action) => {\n    let nextState = Object.assign({}, state)\n    switch (action.type) {\n        case LOAD_PROJECTS:\n            nextState = {}\n            action.projects.map(project => {\n                return nextState[project.id] = project\n            })\n            return nextState\n        case UPDATE_PROJECT:\n            const projectId = action.project.id\n            const projectToUpdate = nextState[projectId]\n            //replace old project with new project\n            nextState[projectId] = Object.assign({} , {...action.project})\n            return nextState\n        case ADD_PROJECT:\n            nextState = {\n                ...state,\n                [action.project.id]: action.project\n            }\n            return nextState\n        case REMOVE_ONE_PROJECT:\n            nextState = Object.assign({}, { ...state })\n            delete nextState[action.projectId]\n            return nextState\n        case REMOVE_PROJECTS:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport default projectReducer\n\n","import {\n    ADD_TICKET,\n    LOAD_TICKETS,\n    REMOVE_ONE_TICKET,\n    REMOVE_TICKETS,\n    UPDATE_TICKET\n} from '../actions/ticketAction'\n\nconst ticketReducer = (state = {}, action) => {\n    let nextState = Object.assign({}, state)\n    switch (action.type) {\n        case LOAD_TICKETS:\n            action.tickets.map(ticket => {\n                //convert employee object to just the name to make state shape easier to update\n                ticket.Employee = ticket.Employee.name\n                return nextState[ticket.id] = ticket\n            })\n            return nextState\n        case REMOVE_TICKETS:\n            return {}\n        case UPDATE_TICKET:\n            const ticketId = action.ticket.id\n            //convert ticket Employee object to just be one level deep with the employee name\n            action.ticket.Employee = action.ticket.Employee.name\n            //find ticket to update\n            const ticketToUpdate = nextState[ticketId]\n            //replace old ticket with new ticket\n            nextState[ticketId] = Object.assign({}, ticketToUpdate, action.ticket)\n            console.log('new ticket',action.ticket);\n            return nextState\n        case REMOVE_ONE_TICKET: \n            nextState = Object.assign({}, {...state})\n            delete nextState[action.ticketId]\n            return nextState\n        case ADD_TICKET:\n            nextState = {\n                ...state,\n                [action.ticket.id]: action.ticket\n            }\n            return nextState\n        default:\n            return state\n    }\n\n}\n\nexport default ticketReducer; ","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport employees from '../reducers/employeeReducer'\nimport session from '../reducers/sessionReducer'\nimport projects from '../reducers/projectReducer'\nimport tickets from '../reducers/ticketReducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst rootReducer = combineReducers({\n    employees,\n    projects,\n    tickets,\n    session\n})\n\nconst storeEnhancer = composeEnhancers(applyMiddleware(thunk))\n\nconst configureStore = (preloadedState) => {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        storeEnhancer\n    )\n}\n\nexport default configureStore; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './navbar.css';\nimport './login.css'\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore'\nimport { loadState, saveState } from './store/localStorage'\n\nconst preloadedState = loadState()\nconst store = configureStore(preloadedState)\n\n//subscribe to the store to get updated state to save to preloaded state\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","const INITIAL_STATE = 'initialState'\n\n//import to wrap all logic in try/catch incase there are issues retrieving or parsing local storage\nexport const loadState = () => {\n    try {\n        const stateJSON = localStorage.getItem(INITIAL_STATE)\n        //conditional for if state is not persisted in localStorage (ex. new user session)\n        if (stateJSON === null) {\n            //returning undefined at state will allow the reducers to use it default state shape\n            return undefined\n        }\n        //parse json data\n        return JSON.parse(stateJSON)\n    } catch (error) {\n        console.warn(error)\n        //if error return undefined\n        return undefined\n    }\n}\n\nexport const saveState = (state) => {\n    try {\n        //stringify the state shape before setting in local storage\n        const stateJSON = JSON.stringify(state)\n        localStorage.setItem(INITIAL_STATE, stateJSON)\n    } catch (error) {\n        console.warn(error)\n    }\n}"],"sourceRoot":""}